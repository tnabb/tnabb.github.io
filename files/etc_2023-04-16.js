m_Job = new Array();
for (i = 0; i <= 45; i++)
	m_Job[i] = new Array();
// 0 = str, 1 = agi, 2 = vit, 3 = int, 4 = dex, 5 = luk
// [level, stat, level, stat, level, stat, ..., "n"]
// order of the jobs is based on the value in the class drop-down
m_Job = [
	[2, 5, 3, 4, 5, 1, 6, 2, 8, 0, 9, 3, "n"], // novice
	[2, 0, 6, 2, 10, 4, 14, 0, 18, 2, 22, 4, 26, 5, 30, 1, 33, 0, 36, 4, 38, 2, 40, 0, 42, 2, 44, 5, 46, 1, 47, 0, 49, 0, 50, 0, "n"], // first jobs
	[2, 1, 6, 0, 10, 4, 14, 2, 18, 3, 22, 4, 26, 5, 30, 0, 33, 1, 36, 1, 38, 0, 40, 5, 42, 4, 44, 2, 46, 5, 47, 0, 49, 4, 50, 1, "n"],
	[2, 5, 6, 2, 10, 3, 14, 4, 18, 5, 22, 1, 26, 0, 30, 2, 33, 3, 36, 4, 38, 5, 40, 1, 42, 0, 44, 2, 46, 3, 47, 4, 49, 0, 50, 5, "n"],
	[2, 4, 6, 0, 10, 3, 14, 4, 18, 4, 22, 5, 26, 1, 30, 4, 33, 1, 36, 4, 38, 0, 40, 0, 42, 4, 44, 5, 46, 2, 47, 3, 49, 1, 50, 4, "n"],
	[2, 3, 6, 4, 10, 4, 14, 3, 18, 1, 22, 3, 26, 1, 30, 5, 33, 3, 36, 4, 38, 3, 40, 1, 42, 5, 44, 3, 46, 3, 47, 1, 49, 5, 50, 3, "n"],
	[2, 2, 6, 4, 10, 0, 14, 4, 18, 2, 22, 0, 26, 3, 30, 2, 33, 1, 36, 5, 38, 4, 40, 0, 42, 4, 44, 0, 46, 5, 47, 2, 49, 0, 50, 4, "n"],
	[1, 2, 3, 2, 4, 0, 5, 5, 8, 2, 10, 0, 11, 4, 12, 2, 13, 1, 15, 0, 17, 2, 18, 2, 19, 4, 20, 5, 21, 0, 23, 2, 27, 0, 28, 5, 29, 2, 31, 4, 33, 0, 36, 2, 37, 5, 38, 1, 40, 4, 43, 2, 46, 0, 47, 0, 48, 4, 49, 4, "n"], // second jobs
	[1, 1, 2, 1, 3, 1, 4, 3, 6, 2, 8, 2, 9, 4, 11, 0, 14, 3, 15, 1, 16, 1, 17, 1, 18, 1, 19, 1, 20, 1, 21, 1, 24, 4, 25, 0, 27, 0, 30, 4, 31, 4, 32, 0, 38, 3, 40, 4, 41, 4, 42, 3, 45, 0, 46, 4, 48, 0, 50, 4, "n"],
	[1, 5, 3, 5, 4, 0, 6, 1, 7, 2, 8, 3, 9, 3, 10, 5, 11, 0, 14, 2, 16, 4, 17, 0, 20, 4, 21, 5, 22, 3, 25, 4, 27, 0, 29, 1, 31, 5, 32, 4, 34, 2, 35, 0, 36, 2, 37, 1, 39, 5, 42, 3, 43, 3, 45, 2, 48, 1, 50, 5, "n"],
	[1, 4, 3, 3, 4, 4, 5, 0, 7, 5, 8, 4, 10, 0, 11, 0, 12, 1, 14, 4, 15, 5, 17, 2, 19, 1, 20, 1, 21, 4, 23, 2, 27, 4, 29, 5, 31, 1, 33, 4, 34, 3, 38, 4, 39, 1, 41, 3, 42, 5, 43, 4, 44, 0, 46, 3, 47, 1, 49, 4, "n"],
	[1, 3, 2, 4, 4, 3, 5, 4, 6, 1, 9, 3, 10, 1, 12, 0, 13, 4, 15, 5, 18, 3, 22, 3, 24, 1, 26, 4, 29, 3, 31, 3, 32, 4, 33, 3, 34, 1, 36, 5, 38, 2, 39, 4, 40, 3, 41, 1, 43, 1, 45, 3, 46, 1, 47, 1, 48, 3, 50, 3, "n"],
	[1, 4, 3, 0, 4, 4, 5, 4, 7, 2, 8, 0, 9, 4, 11, 5, 12, 4, 13, 2, 16, 0, 19, 4, 20, 2, 21, 3, 23, 0, 26, 4, 28, 4, 29, 1, 31, 0, 32, 2, 34, 3, 36, 4, 37, 2, 38, 1, 39, 4, 40, 4, 44, 0, 46, 5, 47, 4, 49, 2, "n"],
	[1, 5, 2, 5, 3, 5, 4, 5, 5, 5, 7, 0, 9, 3, 11, 0, 12, 2, 14, 4, 15, 2, 17, 0, 20, 3, 21, 3, 22, 2, 23, 0, 25, 0, 28, 4, 30, 1, 32, 0, 34, 4, 35, 3, 36, 1, 38, 3, 40, 2, 41, 2, 44, 3, 46, 2, 48, 0, 50, 2, "n"],
	[1, 1, 2, 2, 3, 4, 5, 0, 6, 2, 7, 1, 9, 2, 11, 4, 14, 2, 15, 2, 16, 1, 18, 4, 20, 4, 23, 1, 25, 0, 26, 2, 27, 0, 29, 1, 30, 0, 33, 4, 34, 4, 36, 0, 38, 3, 39, 1, 42, 0, 43, 3, 45, 1, 47, 3, 48, 3, 50, 4, "n"],
	[1, 0, 2, 0, 4, 4, 6, 1, 7, 2, 10, 1, 12, 0, 13, 0, 14, 5, 16, 3, 18, 1, 20, 2, 21, 1, 22, 4, 23, 1, 25, 2, 26, 0, 27, 0, 30, 4, 32, 5, 33, 2, 35, 1, 38, 3, 40, 5, 41, 2, 43, 4, 44, 1, 46, 2, 49, 0, 50, 0, "n"],
	[1, 4, 2, 1, 3, 0, 5, 3, 6, 5, 7, 4, 9, 5, 10, 1, 11, 1, 13, 3, 15, 4, 16, 4, 17, 2, 19, 4, 20, 5, 21, 3, 24, 1, 28, 0, 30, 1, 32, 4, 33, 2, 35, 1, 38, 4, 40, 3, 41, 5, 43, 2, 46, 4, 47, 3, 48, 1, 50, 4, "n"],
	[1, 5, 2, 1, 3, 0, 5, 3, 6, 4, 7, 5, 9, 4, 10, 1, 11, 1, 13, 3, 15, 5, 16, 4, 17, 2, 19, 5, 20, 4, 21, 3, 24, 1, 28, 0, 30, 1, 32, 5, 33, 2, 35, 1, 38, 5, 40, 3, 41, 4, 43, 2, 46, 5, 47, 3, 48, 1, 50, 5, "n"],
	[1, 3, 3, 1, 4, 2, 6, 1, 8, 3, 11, 2, 13, 1, 15, 3, 17, 5, 18, 2, 20, 4, 22, 1, 24, 3, 25, 4, 27, 4, 30, 3, 32, 4, 33, 1, 35, 5, 37, 3, 38, 3, 39, 4, 40, 5, 42, 0, 44, 0, 45, 3, 46, 0, 47, 0, 48, 0, 50, 3, "n"],
	[1, 3, 2, 4, 3, 4, 6, 0, 8, 4, 9, 3, 11, 1, 13, 4, 14, 1, 15, 0, 17, 3, 19, 4, 20, 2, 21, 4, 23, 3, 24, 3, 25, 4, 26, 0, 28, 4, 29, 3, 31, 2, 32, 4, 34, 0, 36, 2, 38, 3, 40, 1, 43, 0, 45, 1, 49, 1, 50, 1, "n"],
	[1, 0, 3, 1, 5, 2, 7, 3, 9, 4, 11, 5, 13, 0, 15, 1, 17, 2, 19, 3, 21, 4, 23, 5, 25, 0, 27, 1, 29, 2, 31, 3, 33, 4, 35, 5, 37, 0, 39, 1, 41, 2, 43, 3, 45, 4, 47, 5, 49, 0, 52, 1, 56, 2, 60, 3, 64, 4, 68, 5, "n"], // super novice
	[1, 0, 2, 1, 2, 5, 4, 4, 5, 2, 6, 0, 7, 0, 8, 0, 10, 1, 11, 4, 12, 2, 13, 3, 14, 1, 16, 4, 17, 1, 19, 0, 22, 2, 25, 0, 27, 5, 28, 4, 29, 2, 31, 4, 33, 0, 36, 4, 37, 1, 38, 5, 40, 2, 41, 0, 43, 2, 44, 4, 46, 0, 47, 0, 49, 4, 52, 0, 53, 1, 56, 0, 57, 0, 58, 2, 60, 1, 62, 4, 64, 0, 65, 1, 67, 3, 68, 2, 70, 0, "n"], // 2nd trans jobs
	[1, 1, 2, 0, 3, 5, 4, 1, 6, 1, 7, 0, 8, 5, 9, 2, 10, 4, 12, 0, 15, 1, 16, 5, 18, 5, 20, 1, 21, 0, 23, 4, 24, 1, 25, 1, 26, 5, 29, 0, 31, 1, 32, 1, 33, 1, 34, 5, 37, 4, 38, 0, 39, 4, 42, 1, 43, 4, 46, 1, 47, 2, 48, 5, 50, 0, 51, 1, 53, 4, 54, 0, 56, 1, 57, 4, 61, 4, 62, 1, 64, 4, 65, 5, 66, 0, 69, 2, 70, 4, "n"],
	[1, 3, 3, 1, 4, 2, 5, 0, 7, 3, 8, 1, 11, 3, 12, 0, 13, 4, 16, 4, 19, 1, 20, 3, 21, 0, 22, 2, 23, 3, 24, 3, 26, 4, 28, 4, 29, 1, 30, 2, 31, 0, 34, 3, 37, 4, 38, 0, 40, 5, 42, 1, 43, 4, 45, 0, 46, 4, 47, 3, 49, 5, 50, 2, 51, 2, 55, 1, 56, 4, 57, 3, 58, 2, 60, 0, 61, 3, 62, 4, 65, 1, 66, 3, 67, 2, 68, 1, 70, 3, "n"],
	[1, 4, 2, 1, 3, 4, 4, 4, 5, 3, 6, 1, 8, 0, 10, 1, 11, 1, 12, 2, 14, 5, 16, 4, 17, 4, 20, 3, 21, 1, 22, 4, 24, 0, 25, 5, 26, 4, 28, 1, 30, 4, 31, 5, 32, 2, 33, 1, 35, 4, 36, 5, 38, 1, 40, 4, 42, 3, 43, 1, 45, 0, 46, 4, 48, 1, 50, 5, 51, 4, 54, 3, 55, 2, 57, 5, 58, 1, 60, 4, 61, 0, 62, 5, 65, 3, 69, 4, 70, 5, "n"],
	[1, 3, 2, 4, 3, 2, 5, 3, 8, 1, 9, 4, 10, 3, 12, 5, 14, 3, 17, 4, 18, 1, 19, 3, 20, 0, 22, 4, 23, 4, 24, 3, 26, 1, 28, 3, 29, 2, 31, 4, 32, 3, 34, 1, 37, 3, 38, 3, 39, 3, 40, 0, 41, 5, 43, 4, 46, 3, 47, 2, 49, 3, 50, 1, 53, 2, 55, 3, 56, 1, 57, 5, 59, 3, 60, 0, 61, 4, 62, 3, 65, 1, 66, 2, 67, 4, 69, 1, 70, 3, "n"],
	[1, 4, 2, 0, 3, 0, 4, 3, 6, 4, 7, 1, 8, 5, 9, 2, 12, 4, 13, 2, 15, 3, 16, 5, 17, 0, 19, 1, 20, 1, 22, 3, 23, 4, 26, 0, 28, 5, 29, 2, 31, 1, 32, 4, 33, 0, 34, 3, 36, 1, 38, 4, 39, 5, 41, 4, 44, 5, 45, 5, 47, 4, 48, 2, 50, 3, 52, 0, 55, 4, 56, 4, 58, 1, 60, 2, 61, 3, 62, 4, 64, 1, 65, 2, 66, 5, 67, 5, 70, 4, "n"],
	[1, 2, 2, 0, 3, 1, 6, 4, 7, 3, 8, 1, 9, 2, 10, 0, 12, 4, 14, 3, 15, 2, 16, 1, 17, 4, 18, 0, 21, 2, 23, 4, 24, 1, 26, 0, 29, 3, 30, 2, 33, 0, 36, 4, 37, 1, 39, 5, 40, 0, 42, 2, 43, 3, 45, 4, 48, 0, 49, 2, 52, 1, 53, 2, 54, 3, 55, 0, 57, 4, 59, 5, 60, 1, 61, 3, 63, 2, 64, 0, 65, 3, 67, 5, 68, 4, 69, 2, 70, 1, "n"],
	[1, 0, 2, 1, 4, 5, 5, 3, 6, 2, 9, 1, 10, 4, 11, 0, 12, 1, 15, 2, 16, 4, 17, 4, 20, 5, 21, 1, 22, 0, 24, 5, 26, 4, 27, 1, 29, 4, 31, 5, 32, 0, 34, 1, 37, 4, 38, 4, 41, 1, 42, 2, 43, 0, 44, 3, 45, 1, 47, 0, 49, 4, 50, 5, 52, 4, 53, 0, 56, 4, 57, 3, 58, 1, 59, 5, 60, 4, 62, 0, 63, 2, 64, 1, 66, 4, 67, 0, 70, 1, "n"],
	[1, 0, 2, 3, 3, 2, 4, 1, 6, 4, 9, 0, 11, 3, 12, 1, 13, 5, 15, 2, 16, 4, 17, 0, 20, 1, 21, 1, 22, 4, 24, 2, 27, 0, 29, 1, 30, 4, 33, 3, 34, 5, 37, 0, 38, 4, 39, 2, 42, 2, 44, 4, 45, 1, 46, 5, 47, 3, 48, 0, 50, 4, 52, 1, 53, 4, 56, 3, 58, 2, 59, 0, 60, 4, 62, 1, 64, 3, 65, 0, 66, 0, 67, 4, 68, 2, 69, 3, 70, 1, "n"],
	[1, 1, 2, 4, 4, 1, 5, 0, 7, 4, 8, 3, 9, 1, 10, 0, 11, 5, 13, 1, 15, 4, 16, 2, 18, 5, 19, 0, 21, 3, 23, 4, 24, 1, 26, 5, 28, 3, 30, 4, 32, 1, 33, 0, 36, 1, 39, 4, 40, 4, 41, 3, 43, 4, 45, 0, 47, 5, 49, 1, 50, 4, 53, 1, 54, 0, 56, 4, 57, 4, 58, 1, 59, 2, 61, 4, 62, 0, 63, 4, 65, 1, 66, 4, 68, 1, 69, 3, 70, 0, "n"],
	[1, 4, 2, 0, 4, 1, 6, 0, 8, 3, 9, 4, 11, 1, 12, 1, 13, 1, 14, 4, 15, 4, 17, 2, 18, 4, 20, 0, 22, 4, 23, 4, 25, 1, 26, 3, 27, 5, 28, 4, 31, 1, 33, 4, 35, 0, 38, 1, 39, 3, 41, 4, 43, 4, 45, 4, 47, 1, 49, 4, 50, 0, 52, 1, 53, 3, 54, 2, 57, 1, 58, 4, 60, 3, 61, 1, 62, 1, 63, 5, 65, 4, 66, 0, 67, 1, 69, 4, 70, 1, "n"],
	[1, 3, 2, 3, 3, 1, 5, 0, 7, 2, 8, 4, 11, 3, 12, 1, 14, 3, 16, 4, 18, 0, 20, 4, 21, 5, 22, 3, 23, 1, 24, 2, 26, 4, 27, 0, 29, 4, 30, 3, 32, 1, 34, 4, 36, 0, 37, 4, 38, 3, 39, 2, 41, 3, 43, 1, 45, 0, 46, 4, 49, 3, 50, 1, 52, 4, 54, 1, 55, 4, 56, 0, 57, 3, 60, 1, 62, 4, 63, 2, 64, 3, 66, 5, 68, 3, 69, 1, 70, 3, "n"],
	[1, 4, 2, 5, 5, 1, 6, 0, 7, 3, 8, 5, 9, 2, 10, 4, 13, 3, 15, 4, 18, 1, 20, 5, 22, 3, 23, 4, 25, 5, 27, 1, 30, 3, 31, 0, 33, 2, 34, 5, 35, 4, 38, 1, 41, 4, 42, 4, 43, 4, 45, 5, 46, 3, 47, 4, 49, 4, 51, 5, 52, 5, 53, 0, 54, 1, 56, 4, 57, 4, 59, 3, 60, 5, 61, 2, 63, 4, 64, 5, 66, 0, 67, 1, 68, 3, 69, 5, 70, 4, "n"],
	[2, 5, 3, 4, 5, 1, 6, 2, 8, 0, 9, 3, "n"], // high novice
	["n"], // high first jobs (same as regular first jobs?)
	["n"],
	["n"],
	["n"],
	["n"],
	["n"],
	[1, 0, 2, 0, 3, 0, 4, 0, 5, 0, 6, 0, 10, 4, 11, 4, 12, 4, 13, 4, 14, 4, 15, 4, 20, 1, 21, 1, 22, 1, 23, 1, 24, 1, 25, 1, "n"], // taek kid
	[1, 0, 2, 0, 3, 0, 4, 0, 5, 0, 6, 0, 7, 0, 8, 0, 9, 0, 10, 0, 11, 0, 12, 0, 20, 4, 21, 4, 22, 4, 23, 4, 24, 4, 25, 4, 39, 1, 40, 1, 41, 1, 42, 1, 43, 1, 44, 1, 45, 1, 46, 1, 47, 1, 48, 1, 49, 1, 50, 1, "n"], // star glad
	[1, 3, 2, 3, 3, 3, 4, 3, 5, 3, 6, 3, 7, 3, 8, 3, 9, 3, 10, 3, 11, 3, 12, 3, 20, 2, 21, 2, 22, 2, 23, 2, 24, 2, 25, 2, 39, 4, 40, 4, 41, 4, 42, 4, 43, 4, 44, 4, 45, 4, 46, 4, 47, 4, 48, 4, 49, 4, 50, 4, "n"], // linker
	[1, 1, 2, 1, 10, 4, 11, 1, 20, 3, 21, 1, 22, 4, 29, 3, 30, 5, 31, 1, 32, 4, 40, 5, 41, 1, 42, 3, 43, 4, 50, 3, 51, 1, 52, 5, 53, 4, 59, 0, 60, 2, 61, 1, 62, 3, 63, 4, 64, 5, "n"], // ninja
	[1, 4, 2, 5, 4, 5, 6, 4, 11, 4, 12, 5, 17, 4, 21, 5, 25, 4, 31, 5, 32, 0, 35, 4, 41, 0, 45, 4, 50, 0, 51, 5, 52, 3, 55, 4, 59, 1, 60, 2, 61, 3, 62, 4, 63, 5, 64, 0, "n"], // gunslinger
	[1, 4, 2, 5, 4, 5, 6, 4, 11, 4, 12, 5, 17, 4, 21, 5, 25, 4, 31, 5, 32, 0, 35, 4, 41, 0, 45, 4, 50, 0, 51, 5, 52, 3, 55, 4, 59, 1, 60, 2, 61, 3, 62, 4, 63, 5, 64, 0, "n"], // gunslinger again? (perhaps placeholder for something)
	// 3rds
	[1, 3, 2, 3, 3, 4, 4, 2, 5, 3, 10, 0, 11, 0, 12, 3, 13, 3, 14, 2, 15, 4, 19, 4, 20, 1, 21, 1, 22, 3, 23, 2, 24, 4, 30, 3, 31, 4, 32, 2, 33, 0, 39, 3, 40, 4, 41, 1, 44, 4, 45, 2, 46, 3, 47, 5, 48, 5, 49, 5, 50, 3, 51, 0, 53, 1, 55, 4, 57, 5, 59, 2, 60, 0, "n"],
	["n"], // RUNt
	[1, 1, 2, 4, 4, 0, 5, 0, 9, 0, 10, 1, 11, 4, 14, 2, 15, 2, 16, 0, 19, 2, 20, 0, 23, 1, 24, 1, 25, 4, 28, 3, 29, 3, 30, 0, 31, 2, 35, 1, 36, 4, 37, 4, 41, 3, 42, 2, 43, 1, 44, 1, 48, 3, 49, 4, 50, 4, 51, 5, 52, 0, 53, 1, 54, 2, 56, 3, 58, 0, 59, 5, 60, 1, "n"],
	["n"], // GLTt
	[1, 3, 3, 2, 5, 4, 7, 3, 8, 3, 10, 2, 11, 2, 14, 4, 15, 4, 18, 0, 19, 0, 22, 3, 24, 0, 26, 1, 27, 1, 28, 0, 32, 3, 34, 2, 36, 4, 38, 1, 39, 1, 40, 3, 41, 3, 44, 4, 45, 2, 46, 0, 49, 3, 50, 4, 51, 5, 52, 1, 53, 2, 54, 0, 55, 3, 57, 2, 58, 5, 59, 4, 60, 3, "n"],
	["n"], // ABIt
	[1, 4, 2, 3, 3, 3, 4, 1, 7, 1, 8, 4, 9, 3, 12, 2, 13, 2, 14, 2, 17, 4, 18, 1, 21, 3, 22, 2, 23, 4, 26, 0, 27, 0, 30, 4, 31, 1, 32, 2, 36, 3, 37, 3, 38, 3, 39, 1, 43, 1, 44, 4, 45, 1, 49, 3, 50, 1, 51, 5, 52, 4, 54, 3, 55, 1, 57, 2, 58, 5, 59, 4, 60, 1, "n"],
	["n"], // RANt
	[1, 3, 2, 3, 3, 4, 6, 4, 7, 3, 8, 1, 12, 3, 13, 4, 15, 2, 18, 2, 19, 4, 20, 1, 23, 3, 24, 2, 25, 2, 28, 4, 29, 1, 31, 5, 34, 0, 35, 3, 36, 3, 39, 4, 40, 1, 41, 3, 44, 3, 45, 3, 47, 1, 50, 3, 51, 4, 52, 2, 53, 5, 54, 1, 55, 3, 57, 2, 58, 1, 59, 4, 60, 3, "n"],
	["n"], // WARt
	[1, 5, 2, 0, 5, 0, 7, 5, 8, 1, 9, 4, 10, 3, 13, 3, 14, 5, 17, 1, 19, 2, 20, 2, 21, 3, 22, 4, 25, 2, 26, 5, 29, 2, 31, 0, 32, 0, 33, 2, 34, 5, 37, 3, 38, 3, 42, 2, 43, 2, 44, 0, 45, 0, 48, 4, 49, 1, 51, 5, 52, 0, 53, 4, 55, 3, 56, 2, 57, 1, 59, 4, 60, 0, "n"],
	["n"], // MECt
	[2, 2, 3, 3, 4, 0, 5, 3, 6, 4, 9, 2, 11, 3, 13, 0, 14, 4, 16, 5, 19, 3, 20, 4, 23, 1, 24, 3, 26, 3, 27, 2, 30, 0, 31, 4, 33, 5, 34, 1, 37, 3, 38, 3, 40, 0, 41, 2, 42, 2, 44, 4, 45, 0, 46, 3, 48, 0, 49, 4, 51, 1, 53, 2, 54, 5, 56, 4, 58, 0, 59, 2, 60, 3, "n"],
	["n"], // ROYt
	[1, 5, 2, 0, 5, 0, 7, 5, 8, 1, 9, 4, 10, 3, 13, 3, 14, 5, 17, 1, 19, 2, 20, 2, 21, 3, 22, 4, 25, 2, 26, 5, 29, 2, 31, 0, 32, 0, 33, 2, 34, 5, 37, 3, 38, 3, 42, 2, 43, 2, 44, 0, 45, 0, 48, 4, 49, 1, 51, 3, 52, 2, 53, 0, 54, 1, 56, 5, 57, 4, 59, 0, 60, 1, "n"],
	["n"], // SHAt
	[1, 1, 2, 4, 4, 0, 5, 0, 9, 0, 10, 1, 11, 4, 14, 2, 15, 2, 16, 0, 19, 2, 20, 0, 23, 1, 24, 1, 25, 4, 28, 3, 29, 3, 30, 0, 31, 2, 35, 1, 36, 4, 37, 4, 41, 3, 42, 2, 43, 1, 44, 1, 48, 3, 49, 4, 50, 4, 51, 0, 53, 1, 54, 3, 55, 5, 56, 2, 58, 4, 59, 0, 60, 3, "n"],
	["n"], // SURt
	[1, 3, 3, 2, 5, 4, 7, 3, 8, 3, 10, 2, 11, 2, 14, 4, 15, 4, 18, 0, 19, 0, 22, 3, 24, 0, 26, 1, 27, 1, 28, 0, 32, 3, 34, 2, 36, 4, 38, 1, 39, 1, 40, 3, 41, 3, 44, 4, 45, 2, 46, 0, 49, 3, 50, 4, 51, 1, 52, 2, 53, 0, 54, 5, 56, 4, 57, 2, 58, 0, 59, 3, 60, 4, "n"],
	["n"], // MINt -- Maestro
	[1, 4, 2, 3, 3, 3, 4, 1, 7, 1, 8, 4, 9, 3, 12, 2, 13, 2, 14, 2, 17, 4, 18, 1, 21, 3, 22, 2, 23, 4, 26, 0, 27, 0, 30, 4, 31, 1, 32, 2, 36, 3, 37, 3, 38, 3, 39, 1, 43, 1, 44, 4, 45, 1, 49, 3, 50, 1, 51, 0, 52, 2, 53, 4, 55, 5, 56, 3, 58, 2, 59, 1, 60, 4, "n"],
	["n"], // WANt
	[1, 3, 2, 3, 3, 4, 4, 2, 5, 3, 10, 0, 11, 0, 12, 3, 13, 3, 14, 2, 15, 4, 19, 4, 20, 1, 21, 1, 22, 3, 23, 2, 24, 4, 30, 3, 31, 4, 32, 2, 33, 0, 39, 3, 40, 4, 41, 1, 44, 4, 45, 2, 46, 3, 47, 5, 48, 5, 49, 5, 50, 3, 51, 4, 53, 0, 55, 1, 57, 2, 59, 4, 60, 3, "n"],
	["n"], // SORt
	[1, 3, 2, 3, 3, 4, 6, 4, 7, 3, 8, 1, 12, 3, 13, 4, 15, 2, 18, 2, 19, 4, 20, 1, 23, 3, 24, 2, 25, 2, 28, 4, 29, 1, 31, 5, 34, 0, 35, 3, 36, 3, 39, 4, 40, 1, 41, 3, 44, 3, 45, 3, 47, 1, 50, 3, 51, 0, 52, 2, 53, 4, 55, 1, 56, 0, 57, 2, 58, 5, 59, 4, 60, 3, "n"],
	["n"], // GENt
	// Kagero/Oboro
	[1, 4, 3, 3, 5, 1, 6, 2, 8, 0, 9, 5, 11, 4, 12, 0, 13, 1, 15, 3, 16, 5, 17, 2, 19, 0, 20, 4, 21, 1, 23, 5, 24, 2, 25, 3, 27, 4, 29, 1, 31, 0, 32, 3, 34, 4, 35, 3, 37, 2, 38, 4, 39, 0, 41, 1, 42, 3, 43, 0, 45, 4, 46, 5, 47, 1, 48, 0, 50, 4, "n"],
	// Expanded Super Novice
	[1, 0, 2, 1, 4, 2, 6, 3, 7, 4, 9, 5, 11, 0, 12, 1, 14, 2, 16, 3, 17, 4, 19, 5, 21, 0, 22, 1, 24, 2, 26, 3, 27, 4, 29, 5, 31, 0, 32, 1, 34, 2, 36, 3, 37, 4, 39, 5, 41, 0, 42, 1, 44, 2, 46, 3, 47, 4, 49, 5, "n"],
];


element = new Array();

element[1] = new Array(1, 1, 1, 1, 1, 1, 1, 1, 0.25, 1);
element[2] = new Array(1, 1, 1, 1, 1, 1, 1, 1, 0, 1);
element[3] = new Array(1, 1, 1, 1, 1, 1, 1, 1, 0, 1);
element[4] = new Array(1, 1, 1, 1, 1, 1, 1, 1, 0, 1);

element[11] = new Array(1, 0.25, 1, 0.5, 1.75, 1, 1, 1, 1, 1);
element[12] = new Array(1, 0, 1, 0.25, 1.75, 0.75, 1, 1, 0.75, 0.75);
element[13] = new Array(1, -0.25, 1, 0, 2, 0.5, 1, 1, 0.5, 0.5);
element[14] = new Array(1, -0.5, 1, 0, 2, 0.25, 0.75, 0.75, 0.25, 0.25);

element[21] = new Array(1, 1, 1, 1.5, 0.5, 1.25, 1, 1, 1, 1);
element[22] = new Array(1, 1, 0.5, 1.75, 0.25, 1.25, 1, 1, 0.75, 0.75);
element[23] = new Array(1, 1, 0, 2, 0, 1, 1, 1, 0.5, 0.5);
element[24] = new Array(1, 1, -0.25, 2, 0, 0.75, 0.75, 0.75, 0.25, 0.25);

element[31] = new Array(1, 1.5, 0.5, 0.25, 1, 1.25, 1, 1, 1, 1);
element[32] = new Array(1, 1.75, 0.25, 0, 1, 1.25, 1, 1, 0.75, 0.75);
element[33] = new Array(1, 2, 0, -0.25, 1, 1, 1, 1, 0.5, 0.5);
element[34] = new Array(1, 2, 0, -0.5, 1, 0.75, 0.75, 0.75, 0.25, 0.25);

element[41] = new Array(1, 0.5, 1.5, 1, 0.25, 1.25, 1, 1, 1, 1);
element[42] = new Array(1, 0.25, 1.75, 1, 0, 1.25, 1, 1, 0.75, 0.75);
element[43] = new Array(1, 0, 2, 1, -0.25, 1, 1, 1, 0.5, 0.5);
element[44] = new Array(1, 0, 2, 1, -0.5, 0.75, 0.75, 0.75, 0.25, 0.25);

element[51] = new Array(1, 1, 1, 1, 1, 0, 1, 0.5, 1, 0.5);
element[52] = new Array(1, 1, 1, 1, 1, 0, 1, 0.25, 0.75, 0.25);
element[53] = new Array(1, 1, 1, 1, 1, 0, 1.25, 0, 0.5, 0);
element[54] = new Array(1, 0.75, 0.75, 0.75, 0.75, 0, 1.25, -0.25, 0.25, -0.25);

element[61] = new Array(1, 0.75, 0.75, 0.75, 0.75, 0.75, 0, 1.25, 0.75, 1);
element[62] = new Array(1, 0.5, 0.5, 0.5, 0.5, 0.5, -0.25, 1.5, 0.5, 1.25);
element[63] = new Array(1, 0.25, 0.25, 0.25, 0.25, 0.25, -0.5, 1.75, 0.25, 1.5);
element[64] = new Array(1, 0, 0, 0, 0, 0, -1, 2, 0, 1.75);

element[71] = new Array(1, 1, 1, 1, 1, 0.5, 1.25, 0, 0.75, 0);
element[72] = new Array(1, 0.75, 0.75, 0.75, 0.75, 0.25, 1.5, -0.25, 0.5, 0);
element[73] = new Array(1, 0.5, 0.5, 0.5, 0.5, 0, 1.75, -0.5, 0.25, 0);
element[74] = new Array(1, 0.25, 0.25, 0.25, 0.25, -0.25, 2, -1, 0, 0);

element[81] = new Array(0.25, 1, 1, 1, 1, 1, 1, 1, 1.25, 1);
element[82] = new Array(0.25, 1, 1, 1, 1, 0.75, 1, 1, 1.50, 1);
element[83] = new Array(0, 1, 1, 1, 1, 0.5, 1, 1, 1.75, 1);
element[84] = new Array(0, 1, 1, 1, 1, 0.25, 1, 1, 2, 1);

element[91] = new Array(1, 1, 1, 1.25, 1, -0.25, 1.5, -0.25, 1, 0);
element[92] = new Array(1, 1, 1, 1.5, 1, -0.5, 1.75, -0.5, 1.25, 0);
element[93] = new Array(1, 1.25, 0.75, 1.75, 1, -0.75, 2, -0.75, 1.5, 0);
element[94] = new Array(1, 1.5, 0.5, 2, 1, -1, 2, -1, 1.75, 0);



element_R = new Array();

element_R[1] = new Array(1, 1, 1, 1, 1, 1, 1, 1, 0.7, 1);
element_R[2] = new Array(1, 1, 1, 1, 1, 1, 1, 1, 0.5, 1);
element_R[3] = new Array(1, 1, 1, 1, 1, 1, 1, 1, 0, 1);
element_R[4] = new Array(1, 1, 1, 1, 1, 1, 1, 1, 0, 1);

element_R[11] = new Array(1, 0.25, 1, 0.9, 1.75, 1, 1, 1, 1, 1);
element_R[12] = new Array(1, 0, 1, 0.8, 1.75, 0.75, 1, 1, 0.75, 0.75);
element_R[13] = new Array(1, -0.25, 1, 0.7, 2, 0.5, 1, 1, 0.5, 0.5);
element_R[14] = new Array(1, -0.5, 1, 0.6, 2, 0.25, 0.75, 0.75, 0.25, 0.25);

element_R[21] = new Array(1, 1, 0.25, 1.5, 0.9, 1.25, 1, 1, 1, 1);
element_R[22] = new Array(1, 1, 0, 1.75, 0.8, 1.25, 1, 1, 0.75, 0.75);
element_R[23] = new Array(1, 1, -0.25, 2, 0.7, 1, 1, 1, 0.5, 0.5);
element_R[24] = new Array(1, 1, -0.5, 2, 0.6, 0.75, 0.75, 0.75, 0.25, 0.25);

element_R[31] = new Array(1, 1.5, 0.9, 0.25, 1, 1.25, 1, 1, 1, 1);
element_R[32] = new Array(1, 1.75, 0.8, 0, 1, 1.25, 1, 1, 0.75, 0.75);
element_R[33] = new Array(1, 2, 0.7, -0.25, 1, 1, 1, 1, 0.5, 0.5);
element_R[34] = new Array(1, 2, 0.6, -0.5, 1, 0.75, 0.75, 0.75, 0.25, 0.25);

element_R[41] = new Array(1, 0.9, 1.5, 1, 0.25, 1.25, 1, 1, 1, 1);
element_R[42] = new Array(1, 0.8, 1.75, 1, 0, 1.25, 1, 1, 0.75, 0.75);
element_R[43] = new Array(1, 0.7, 2, 1, -0.25, 1, 1, 1, 0.5, 0.5);
element_R[44] = new Array(1, 0.6, 2, 1, -0.5, 0.75, 0.75, 0.75, 0.25, 0.25);

element_R[51] = new Array(1, 1, 1, 1, 1, 0, 1, 0.5, 1, 0.5);
element_R[52] = new Array(1, 1, 1, 1, 1, 0, 1, 0.25, 0.75, 0.25);
element_R[53] = new Array(1, 1, 1, 1, 1, 0, 1.25, 0, 0.5, 0);
element_R[54] = new Array(1, 0.75, 0.75, 0.75, 0.75, 0, 1.25, -0.25, 0.25, -0.25);

element_R[61] = new Array(1, 0.75, 0.75, 0.75, 0.75, 0.75, 0, 1.25, 0.75, 1);
element_R[62] = new Array(1, 0.5, 0.5, 0.5, 0.5, 0.5, -0.25, 1.5, 0.5, 1.25);
element_R[63] = new Array(1, 0.25, 0.25, 0.25, 0.25, 0.25, -0.5, 1.75, 0.25, 1.5);
element_R[64] = new Array(1, 0, 0, 0, 0, 0, -1, 2, 0, 1.75);

element_R[71] = new Array(1, 1, 1, 1, 1, 0.5, 1.25, 0, 0.75, 0);
element_R[72] = new Array(1, 0.75, 0.75, 0.75, 0.75, 0.25, 1.5, -0.25, 0.5, 0);
element_R[73] = new Array(1, 0.5, 0.5, 0.5, 0.5, 0, 1.75, -0.5, 0.25, 0);
element_R[74] = new Array(1, 0.25, 0.25, 0.25, 0.25, -0.25, 2, -1, 0, 0);

element_R[81] = new Array(0.7, 1, 1, 1, 1, 1, 1, 1, 1.25, 1);
element_R[82] = new Array(0.5, 1, 1, 1, 1, 0.75, 1, 1, 1.5, 1);
element_R[83] = new Array(0, 1, 1, 1, 1, 0.5, 1, 1, 1.75, 1);
element_R[84] = new Array(0, 1, 1, 1, 1, 0.25, 1, 1, 2, 1);

element_R[91] = new Array(1, 1, 1, 1.25, 1, -0.25, 1.5, -0.25, 1, 0);
element_R[92] = new Array(1, 1, 1, 1.5, 1, -0.5, 1.75, -0.5, 1.25, 0);
element_R[93] = new Array(1, 1.25, 0.75, 1.75, 1, -0.75, 2, -0.75, 1.5, 0);
element_R[94] = new Array(1, 1.5, 0.5, 2, 1, -1, 2, -1, 1.75, 0);

/*
m_JobASPD = [
	[150,135,130,0,0,0,120,0,130,135,0,0,0,0,0,0,0,0,0,0,0,0],
	[160,150,145,140,135,130,130,125,135,0,0,0,0,0,0,0,0,0,0,0,0,0],	//swordman
	[160,150,135,0,0,0,120,0,0,0,120,0,0,0,0,0,0,0,0,0,0,0],
	[160,0,0,0,0,0,0,0,140,140,0,0,0,0,0,0,0,0,0,0,0,0],
	[160,140,0,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,0,0,0],
	[150,140,0,0,0,0,0,0,0,130,0,0,0,0,0,0,0,0,0,0,0,0], //magician
	[160,140,130,0,0,0,130,125,130,0,0,0,0,0,0,0,0,0,0,0,0,0],
	[160,150,150,145,140,140,130,130,135,0,0,0,0,0,0,0,0,0,0,0,0,0],	//knight
	[160,150,135,0,0,0,120,0,0,0,0,150,0,0,0,0,0,0,0,0,0,0],
	[160,0,0,0,0,0,0,0,140,140,0,0,140,0.01,0,0,0,0,0,0,0,0],
	[160,140,0,0,0,0,0,0,0,0,140,0,0,0,0,0,0,0,0,0,0,0],
	[150,142.5,0,0,0,0,0,0,0,137.5,0,0,0,0,0,0,0,0,0,0,0,0], //wizard
	[160,140,135,0,0,0,135,135,132.5,0,0,0,0,0,0,0,0,0,0,0,0,0],
	[160,150,150,145,140,140,130,130,135,0,0,0,0,0,0,0,0,0,0,0,0,0],	//crusader
	[160,150,145,0,0,0,0.01,0,0,0,135,0,0,0,0,0,0,0,0,0,0,0],
	[160.1,0,0,0,0,0,0,0,142.5,142.5,0,0,0,152.6,0,0,0,0,0,0,0,0],	//monk
	[160,145,0,0,0,0,0,0,0,0,135,0,0,0,142.5,0,0,0,0,0,0,0],
	[160,145,0,0,0,0,0,0,0,0,135,0,0,0,0,142.5,0,0,0,0,0,0],
	[155,147.5,0,0,0,0,0,0,0,137.5,0,0,145,0,0,0,0,0,0,0,0,0], //sage
	[160,145,142.5,0,0,0,132.5,130,135,0,0,0,0,0,0,0,0,0,0,0,0,0],
	[150,135,130,0,0,0,120,0,130,135,0,0,0,0,0,0,0,0,0,0,0,0],
	[160,150,150,145,140,140,130,130,135,0,0,0,0,0,0,0,0,0,0,0,0,0],	//lord knight
	[160,150,135,0,0,0,120,0,0,0,0,150,0,0,0,0,0,0,0,0,0,0],
	[160,0,0,0,0,0,0,0,140,140,0,0,140,0.01,0,0,0,0,0,0,0,0],
	[160,140,0,0,0,0,0,0,0,0,140,0,0,0,0,0,0,0,0,0,0,0],
	[150,142.5,0,0,0,0,0,0,0,137.5,0,0,0,0,0,0,0,0,0,0,0,0], //high wizard
	[160,140,135,0,0,0,135,135,132.5,0,0,0,0,0,0,0,0,0,0,0,0,0],
	[160,150,150,145,140,140,130,130,135,0,0,0,0,0,0,0,0,0,0,0,0,0],	//paladin
	[160,150,145,0,0,0,0.01,0,0,0,135,0,0,0,0,0,0,0,0,0,0,0],
	[160.1,0,0,0,0,0,0,0,142.5,142.5,0,0,0,152.5,0,0,0,0,0,0,0,0],	//champion
	[160,145,0,0,0,0,0,0,0,0,135,0,0,0,142.5,0,0,0,0,0,0,0],
	[160,145,0,0,0,0,0,0,0,0,135,0,0,0,0,142.5,0,0,0,0,0,0],
	[155,147.5,0,0,0,0,0,0,0,137.5,0,0,145,0,0,0,0,0,0,0,0,0],
	[160,145,142.5,0,0,0,132.5,130,135,0,0,0,0,0,0,0,0,0,0,0,0,0],
	[0],
	[0],
	[0],
	[0],
	[0],
	[0],
	[0],
	[160,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
	[160,0,0,0,0,0,0,0,0,0,0,0,150,0,0,0,0,0,0,0,0,0],
	[150,142.5,0,0,0,0,0,0,0,137.5,0,0,0,0,0,0,0,0,0,0,0,0],
	[160,150,0,0,0,0,0,0,0,0,0,0,0,0,0,0,125,0,0,0,0,0],
	[150,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,125,50,130,50]
];
*/
m_JobASPD = [
	//fist, dag, 1hsw,2hsw,1hsp,2hsp,axe,2haxe,mace,rod, bow, katar,book,knu, instr, whip, shur, handgun, rifle, shotgun, gatling, grenade
	[1, 1.3, 1.4, 0, 0, 0, 1.6, 0, 1.4, 1.3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],	//novice
	[0.8, 1, 1.1, 1.2, 1.3, 1.4, 1.4, 1.5, 1.3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],	//swordman
	[0.8, 1, 1.3, 0, 0, 0, 1.6, 0, 0, 0, 1.6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],	//thief
	[0.8, 0, 0, 0, 0, 0, 0, 0, 1.2, 1.2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],	//acolyte
	[0.8, 1.2, 0, 0, 0, 0, 0, 0, 0, 0, 1.4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],	//archer
	[1, 1.2, 0, 0, 0, 0, 0, 0, 0, 1.4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],	//magician
	[0.8, 1.2, 1.4, 0, 0, 0, 1.4, 1.5, 1.4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],	//merchant
	[0.8, 1, 1, 1.1, 1.2, 1.2, 1.4, 1.4, 1.3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],	//knight
	[0.8, 1, 1.3, 0, 0, 0, 1.6, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],	//assassin
	[0.8, 0, 0, 0, 0, 0, 0, 0, 1.2, 1.2, 0, 0, 1.2, 4, 0, 0, 0, 0, 0, 0, 0, 0],	//priest
	[0.8, 1.15, 0, 0, 0, 0, 0, 0, 0, 0, 1.2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],	//hunter
	[1, 1.15, 0, 0, 0, 0, 0, 0, 0, 1.25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],	//wizard
	[0.8, 1.2, 1.3, 0, 0, 0, 1.3, 1.3, 1.35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],	//blacksmith
	[0.8, 1, 1, 1.1, 1.2, 1.2, 1.4, 1.4, 1.3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],	//crusader
	[0.8, 1, 1.1, 0, 0, 0, 1.6, 0, 0, 0, 1.3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],	//rogue
	[0.8, 0, 0, 0, 0, 0, 0, 0, 1.15, 1.15, 0, 0, 0, 0.95, 0, 0, 0, 0, 0, 0, 0, 0],	//monk
	[0.8, 1.1, 0, 0, 0, 0, 0, 0, 0, 0, 1.3, 0, 0, 0, 1.15, 0, 0, 0, 0, 0, 0, 0],	//bard
	[0.8, 1.1, 0, 0, 0, 0, 0, 0, 0, 0, 1.3, 0, 0, 0, 0, 1.15, 0, 0, 0, 0, 0, 0],	//dancer
	[0.9, 1.05, 0, 0, 0, 0, 0, 0, 0, 1.25, 0, 0, 1.1, 0, 0, 0, 0, 0, 0, 0, 0, 0],	//sage
	[0.8, 1.1, 1.15, 0, 0, 0, 1.35, 1.4, 1.3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],	//alchemist
	[1, 1.3, 1.4, 0, 0, 0, 1.6, 0, 1.4, 1.3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],	//super novice			en head.js y foot.js se modifica el valor en m_JobASPD[20][7] en vez del 0 que pone aquí
	[0.8, 1, 1, 1.1, 1.2, 1.2, 1.4, 1.4, 1.3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],	//lord knight
	[0.8, 1, 1.3, 0, 0, 0, 1.6, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],	//assassin cross
	[0.8, 0, 0, 0, 0, 0, 0, 0, 1.2, 1.2, 0, 0, 1.2, 4, 0, 0, 0, 0, 0, 0, 0, 0],	//high priest
	[0.8, 1.15, 0, 0, 0, 0, 0, 0, 0, 0, 1.2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],	//sniper
	[1, 1.15, 0, 0, 0, 0, 0, 0, 0, 1.25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],	//high wizard
	[0.8, 1.2, 1.3, 0, 0, 0, 1.3, 1.3, 1.35, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],	//whitesmith
	[0.8, 1, 1.1, 1.2, 1.2, 1.2, 1.4, 1.4, 1.3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],	//paladin
	[0.8, 1, 1.1, 0, 0, 0, 1.6, 0, 0, 0, 1.3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],	//stalker
	[0.8, 0, 0, 0, 0, 0, 0, 0, 1.15, 1.15, 0, 0, 0, 0.95, 0, 0, 0, 0, 0, 0, 0, 0],	//champion
	[0.8, 1.1, 0, 0, 0, 0, 0, 0, 0, 0, 1.3, 0, 0, 0, 1.15, 0, 0, 0, 0, 0, 0, 0],	//clown
	[0.8, 1.1, 0, 0, 0, 0, 0, 0, 0, 0, 1.3, 0, 0, 0, 0, 1.15, 0, 0, 0, 0, 0, 0],	//gypsy
	[0.9, 1.05, 0, 0, 0, 0, 0, 0, 0, 1.25, 0, 0, 1.1, 0, 0, 0, 0, 0, 0, 0, 0, 0],	//professor
	[0.8, 1.1, 1.15, 0, 0, 0, 1.35, 1.4, 1.3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],	//creator
	[0],
	[0],
	[0],
	[0],
	[0],
	[0],
	[0],
	[0.8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],	//taekwon
	[0.8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],	//star gladiator
	[1, 1.15, 0, 0, 0, 0, 0, 0, 0, 1.25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],	//soul linker
	[0.8, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.5, 0, 0, 0, 0, 0],	//ninja
	[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1.4, 1.5, 3, 1.4, 3]	//gunslinger
];


m_JobASPD_R = [
	//fist, dag, 1hsw, 2hsw, 1hsp, 2hsp, axe, 2haxe, mace, rod, bow, katar, book, knu, instr, whip, shur, handgun, rifle, shotgun, gatling, grenade
	//Bar,DAG,SW,SW2,SP,SP2,AX,AX2,MA,ROD,BOW,KA,BO,KNU,INS,WHI,HU,HG,RIF,SGU,GAT,GRE,SHI, DualHand - SHI+Typ
	[156, 141, 139, 0, 0, 0, 146, 0, 146, 131, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -10, 0, 0, 0, 0, 0, 0],	//novice
	[156, 149, 149, 142, 139, 131, 141, 136, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -5, 0, 0, 0, 0, 0, 0],	//swordman
	[156, 148, 146, 0, 0, 0, 136, 0, 0, 0, 143, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -6, 0, 0, 0, 0, 0, 0],	//thief
	[156, 0, 0, 0, 0, 0, 0, 0, 151, 136, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -7, 0, 0, 0, 0, 0, 0],	//acolyte
	[156, 141, 0, 0, 0, 0, 0, 0, 0, 0, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -9, 0, 0, 0, 0, 0, 0],	//archer
	[146, 146, 0, 0, 0, 0, 0, 0, 0, 141, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -10, 0, 0, 0, 0, 0, 0],	//mage
	[156, 144, 144, 0, 0, 0, 148, 141, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -5, 0, 0, 0, 0, 0, 0],	//merchant
	[156, 147, 151, 144, 141, 131, 146, 141, 151, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -5, 0, 0, 0, 0, 0, 0],	//knight
	[156, 154, 146, 0, 0, 0, 145, 0, 0, 0, 0, 154, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -6, -10, -12, 0, 0, 0, -12],	//assassin
	[156, 0, 0, 0, 0, 0, 0, 0, 153, 136, 0, 0, 152, 136, 0, 0, 0, 0, 0, 0, 0, 0, -5, 0, 0, 0, 0, 0, 0],	//priest
	[156, 143, 0, 0, 0, 0, 0, 0, 0, 0, 148, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -9, 0, 0, 0, 0, 0, 0],	//hunter
	[146, 142, 0, 0, 0, 0, 0, 0, 0, 143, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -8, 0, 0, 0, 0, 0, 0],	//wizard
	[156, 146, 146, 0, 0, 0, 150, 143, 148, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -5, 0, 0, 0, 0, 0, 0],	//blacksmith
	[156, 148, 153, 141, 143, 144, 146, 141, 151, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -5, 0, 0, 0, 0, 0, 0],	//crusader
	[156, 151, 146, 0, 0, 0, -3, 0, 0, 0, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -5, 0, 0, 0, 0, 0, 0],	//rogue
	[156, 0, 0, 0, 0, 0, 0, 0, 153, 136, 0, 0, 0, 156, 0, 0, 0, 0, 0, 0, 0, 0, -5, 0, 0, 0, 0, 0, 0],	//monk
	[156, 143, 0, 0, 0, 0, 0, 0, 0, 0, 148, 0, 0, 0, 151, 0, 0, 0, 0, 0, 0, 0, -7, 0, 0, 0, 0, 0, 0],	//bard
	[156, 143, 0, 0, 0, 0, 0, 0, 0, 0, 148, 0, 0, 0, 0, 151, 0, 0, 0, 0, 0, 0, -7, 0, 0, 0, 0, 0, 0],	//dancer
	[151, 143, 0, 0, 0, 0, 0, 0, 0, 141, 0, 0, 153, 0, 0, 0, 0, 0, 0, 0, 0, 0, -10, 0, 0, 0, 0, 0, 0],	//sage
	[156, 146, 151, 0, 0, 0, 151, 144, 151, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -4, 0, 0, 0, 0, 0, 0],	//alchemist
	[156, 141, 139, 0, 0, 0, 146, 0, 146, 131, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -10, 0, 0, 0, 0, 0, 0],	//super novice			en head.js y foot.js se modifica el valor en m_JobASPD[20][7] en vez del 0 que pone aquí
	[156, 147, 151, 144, 141, 131, 146, 141, 151, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -5, 0, 0, 0, 0, 0, 0],	//lordknight
	[156, 154, 146, 0, 0, 0, 145, 0, 0, 0, 0, 154, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -6, -10, -12, 0, 0, 0, -12],	//assassin cross
	[156, 0, 0, 0, 0, 0, 0, 0, 153, 136, 0, 0, 152, 136, 0, 0, 0, 0, 0, 0, 0, 0, -5, 0, 0, 0, 0, 0, 0],	//high priest
	[156, 143, 0, 0, 0, 0, 0, 0, 0, 0, 148, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -9, 0, 0, 0, 0, 0, 0],	//sniper
	[146, 142, 0, 0, 0, 0, 0, 0, 0, 143, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -8, 0, 0, 0, 0, 0, 0],	//high wizard
	[156, 146, 146, 0, 0, 0, 150, 143, 148, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -5, 0, 0, 0, 0, 0, 0],	//mastersmith
	[156, 148, 153, 141, 143, 144, 146, 141, 151, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -5, 0, 0, 0, 0, 0, 0],	//paladin
	[156, 151, 146, 0, 0, 0, -3, 0, 0, 0, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -5, 0, 0, 0, 0, 0, 0],	//stalker
	[156, 0, 0, 0, 0, 0, 0, 0, 153, 136, 0, 0, 0, 156, 0, 0, 0, 0, 0, 0, 0, 0, -5, 0, 0, 0, 0, 0, 0],	//champion
	[156, 143, 0, 0, 0, 0, 0, 0, 0, 0, 148, 0, 0, 0, 151, 0, 0, 0, 0, 0, 0, 0, -7, 0, 0, 0, 0, 0, 0],	//clown
	[156, 143, 0, 0, 0, 0, 0, 0, 0, 0, 148, 0, 0, 0, 0, 151, 0, 0, 0, 0, 0, 0, -7, 0, 0, 0, 0, 0, 0],	//gypsy
	[151, 143, 0, 0, 0, 0, 0, 0, 0, 141, 0, 0, 153, 0, 0, 0, 0, 0, 0, 0, 0, 0, -10, 0, 0, 0, 0, 0, 0],	//scholar
	[156, 146, 151, 0, 0, 0, 151, 144, 151, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -4, 0, 0, 0, 0, 0, 0],	//biochemist
	[156, 141, 139, 0, 0, 0, 146, 0, 146, 131, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -10, 0, 0, 0, 0, 0, 0],	//high novice
	[156, 149, 149, 142, 139, 131, 141, 136, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -5, 0, 0, 0, 0, 0, 0],	//high swordman
	[156, 148, 146, 0, 0, 0, 136, 0, 0, 0, 143, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -6, 0, 0, 0, 0, 0, 0],	//high thief
	[156, 0, 0, 0, 0, 0, 0, 0, 151, 136, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -7, 0, 0, 0, 0, 0, 0],	//high acolyte
	[156, 141, 0, 0, 0, 0, 0, 0, 0, 0, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -9, 0, 0, 0, 0, 0, 0],	//high archer
	[146, 146, 0, 0, 0, 0, 0, 0, 0, 141, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -10, 0, 0, 0, 0, 0, 0],	//high mage
	[156, 144, 144, 0, 0, 0, 148, 141, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -5, 0, 0, 0, 0, 0, 0],	//high merchant
	[156, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -6, 0, 0, 0, 0, 0, 0],	//taekwon kid
	[156, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, -6, 0, 0, 0, 0, 0, 0],	//taekwon master
	[146, 146, 0, 0, 0, 0, 0, 0, 0, 143, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -8, 0, 0, 0, 0, 0, 0],	//soul linker
	[156, 153, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 141, 0, 0, 0, 0, 0, -6, 0, 0, 0, 0, 0, 0],	//ninja
	[146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 151, 141, 106, 146, 96, -6, 0, 0, 0, 0, 0, 0],	//gunsliger
	[156, 146, 144, 141, 148, 144, 138, 136, 151, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -5, 0, 0, 0, 0, 0, 0],	//rune knight
	[156, 146, 144, 141, 148, 144, 138, 136, 151, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -5, 0, 0, 0, 0, 0, 0],	//rune knight (trans)
	[156, 154, 131, 0, 0, 0, 116, 0, 0, 0, 0, 154, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -9, -10, -16, 0, 0, 0, -20],	//guillotine cross
	[156, 154, 131, 0, 0, 0, 116, 0, 0, 0, 0, 154, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -9, -10, -16, 0, 0, 0, -20],	//guillotine cross (trans)
	[151, 0, 0, 0, 0, 0, 0, 0, 151, 136, 0, 0, 152, 146, 0, 0, 0, 0, 0, 0, 0, 0, -5, 0, 0, 0, 0, 0, 0],	//arch bishop
	[151, 0, 0, 0, 0, 0, 0, 0, 151, 136, 0, 0, 152, 146, 0, 0, 0, 0, 0, 0, 0, 0, -5, 0, 0, 0, 0, 0, 0],	//arch bishop (trans)
	[156, 146, 0, 0, 0, 0, 0, 0, 0, 0, 147, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -8, 0, 0, 0, 0, 0, 0],	//ranger
	[156, 146, 0, 0, 0, 0, 0, 0, 0, 0, 147, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -8, 0, 0, 0, 0, 0, 0],	//ranger (trans)
	[151, 144, 0, 0, 0, 0, 0, 0, 0, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -5, 0, 0, 0, 0, 0, 0],	//warlock
	[151, 144, 0, 0, 0, 0, 0, 0, 0, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -5, 0, 0, 0, 0, 0, 0],	//warlock (trans)
	[156, 136, 131, 0, 0, 0, 151, 148, 148, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -6, 0, 0, 0, 0, 0, 0],	//mechanic
	[156, 136, 131, 0, 0, 0, 151, 148, 148, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -6, 0, 0, 0, 0, 0, 0],	//mechanic (trans)
	[156, 149, 151, 147, 146, 146, 148, 144, 152, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -5, 0, 0, 0, 0, 0, 0],	//royal guard
	[156, 149, 151, 147, 146, 146, 148, 144, 152, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -5, 0, 0, 0, 0, 0, 0],	//royal guard (trans)
	[156, 153, 149, 0, 0, 0, -3, 0, 0, 0, 149, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -5, 0, 0, 0, 0, 0, 0],	//shadow chaser
	[156, 153, 149, 0, 0, 0, -3, 0, 0, 0, 149, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -5, 0, 0, 0, 0, 0, 0],	//shadow chaser (trans)
	[158, 0, 0, 0, 0, 0, 0, 0, 153, 148, 0, 0, 0, 157, 0, 0, 0, 0, 0, 0, 0, 0, -5, 0, 0, 0, 0, 0, 0],	//sura
	[158, 0, 0, 0, 0, 0, 0, 0, 153, 148, 0, 0, 0, 157, 0, 0, 0, 0, 0, 0, 0, 0, -5, 0, 0, 0, 0, 0, 0],	//sura (trans)
	[156, 144, 0, 0, 0, 0, 0, 0, 0, 0, 146, 0, 0, 0, 151, 0, 0, 0, 0, 0, 0, 0, -7, 0, 0, 0, 0, 0, 0],	//minstrel
	[156, 144, 0, 0, 0, 0, 0, 0, 0, 0, 146, 0, 0, 0, 151, 0, 0, 0, 0, 0, 0, 0, -7, 0, 0, 0, 0, 0, 0],	//minstrel (trans)
	[156, 144, 0, 0, 0, 0, 0, 0, 0, 0, 146, 0, 0, 0, 0, 151, 0, 0, 0, 0, 0, 0, -7, 0, 0, 0, 0, 0, 0],	//wanderer
	[156, 144, 0, 0, 0, 0, 0, 0, 0, 0, 146, 0, 0, 0, 0, 151, 0, 0, 0, 0, 0, 0, -7, 0, 0, 0, 0, 0, 0],	//wanderer (trans)
	[156, 146, 0, 0, 0, 0, 0, 0, 0, 151, 0, 0, 151, 0, 0, 0, 0, 0, 0, 0, 0, 0, -5, 0, 0, 0, 0, 0, 0],	//sorcerer
	[156, 146, 0, 0, 0, 0, 0, 0, 0, 151, 0, 0, 151, 0, 0, 0, 0, 0, 0, 0, 0, 0, -5, 0, 0, 0, 0, 0, 0],	//sorcerer (trans)
	[156, 146, 152, 0, 0, 0, 145, 145, 151, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -4, 0, 0, 0, 0, 0, 0],	//genetic
	[156, 146, 152, 0, 0, 0, 145, 145, 151, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -4, 0, 0, 0, 0, 0, 0],	//genetic (trans)
	[156, 153, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 141, 0, 0, 0, 0, 0, -6, 0, 0, 0, 0, 0, 0],	//kageru / oboro
	[156, 141, 139, 0, 0, 0, 146, 0, 146, 131, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -10, 0, 0, 0, 0, 0, 0]	//expanded super novice
	//Bar,DAG,SW,SW2,SP,SP2,AX,AX2,MA,ROD,BOW,KA,BO,KNU,INS,WHI,HU,HG,RIF,SGU,GAT,GRE,SHI, DualHand - SHI+Typ
	//fist, dag, 1hsw, 2hsw, 1hsp, 2hsp, axe, 2haxe, mace, rod, bow, katar, book, knu, instr, whip, shur, handgun, rifle, shotgun, gatling, grenade
];



m_WeaponSize = [
	[1, 1, 1],
	[1, 0.75, 0.5],
	[0.75, 1, 0.75],
	[0.75, 0.75, 1],
	[0.75, 0.75, 1],
	[0.75, 0.75, 1],
	[0.5, 0.75, 1],
	[0.5, 0.75, 1],
	[0.75, 1, 1],
	[1, 1, 1],
	[1, 1, 0.75],
	[0.75, 1, 0.75],
	[1, 1, 0.5],
	[1, 1, 0.75],
	[0.75, 1, 0.75],
	[0.75, 1, 0.5],
	[0.75, 0.75, 1],
	[1, 1, 1],
	[1, 1, 1],
	[1, 1, 1],
	[1, 1, 1],
	[1, 1, 1]
];

PC_BaseExp = [
	[0, 9, 16, 25, 36, 77, 112, 153, 200, 253, 320, 385, 490, 585, 700, 830, 970, 1120, 1260, 1420, 1620, 1860, 1990, 2240, 2504, 2950, 3426, 3934, 4474, 6889, 7995, 9174, 10425, 11748, 13967, 15775, 17678, 19677, 21773, 30543, 34212, 38065, 42102, 46323, 53026, 58419, 64041, 69892, 75973, 102468, 115254, 128692, 142784, 157528, 178184, 196300, 215198, 234879, 255341, 330188, 365914, 403224, 442116, 482590, 536948, 585191, 635278, 687211, 740988, 925400, 1473746, 1594058, 1718928, 1848355, 1982340, 2230113, 2386162, 2547417, 2713878, 3206160, 3681024, 4022472, 4377024, 4744680, 5125440, 5767272, 6204000, 6655464, 7121664, 7602600, 9738720, 11649960, 13643520, 18339300, 23836800, 35658000, 48687000, 58135000, 99999998, 0],
	[0, 10, 18, 28, 40, 85, 123, 168, 220, 278, 400, 481, 613, 731, 875, 1038, 1213, 1400, 1575, 1775, 2268, 2604, 2786, 3136, 3506, 4130, 4796, 5508, 6264, 9645, 12392, 14220, 16159, 18209, 21649, 24451, 27401, 30499, 33748, 47342, 58160, 64711, 71573, 78749, 90144, 99312, 108870, 118816, 129154, 174196, 213220, 238080, 264150, 291427, 329640, 363155, 398116, 434526, 472381, 610848, 731828, 806448, 884232, 965180, 1073896, 1170382, 1270556, 1374422, 1481976, 1850800, 3389616, 3666333, 3953534, 4251217, 4559382, 5129260, 5488173, 5859059, 6241919, 7374168, 9570662, 10458427, 11380262, 12336168, 13326144, 14994907, 16130400, 17304206, 18516326, 19766760, 29216160, 34949880, 40930560, 55017900, 71510400, 106974000, 146061000, 174405000, 343210000, 0]
];

PC_JobExp = [
	[0, 10, 20, 28, 40, 91, 151, 205, 268, 340, 0],
	[0, 11, 22, 31, 44, 100, 166, 226, 295, 374, 0],
	[0, 30, 43, 58, 76, 116, 180, 220, 272, 336, 520, 604, 699, 802, 948, 1125, 1668, 1937, 2226, 3040, 3988, 5564, 6272, 7021, 9114, 11473, 15290, 16891, 18570, 23229, 28359, 36478, 39716, 43088, 52417, 62495, 78160, 84175, 90404, 107611, 125915, 153941, 191781, 204351, 248352, 286212, 386371, 409795, 482092, 509596, 982092, 992092, 1002092, 1012092, 1022092, 1032092, 1042092, 1052092, 1062092, 1072092, 1082092, 1092092, 1102092, 1112092, 1122092, 1132092, 1142092, 1152092, 1162092, 1172092, 1182092, 1192092, 1202092, 1212092, 1222092, 1232092, 1242092, 1252092, 1262092, 1272092, 1282092, 1292092, 1302092, 1312092, 1322092, 1332092, 1342092, 1352092, 1362092, 1372092, 1382092, 1392092, 1402092, 1412092, 1422092, 1432092, 1442092, 1452092, 1462092, 0],
	[0, 60, 86, 116, 152, 232, 360, 440, 544, 672, 1040, 1208, 1398, 1604, 1896, 2250, 3336, 3874, 4452, 6080, 7976, 11128, 12544, 14042, 18228, 28683, 38225, 42228, 46425, 58073, 70898, 91195, 99290, 107720, 131043, 156238, 195400, 210438, 226010, 269028, 314788, 384853, 479453, 510878, 620880, 715530, 965928, 1024488, 1205230, 1273990, 0],
	[0, 144, 184, 284, 348, 603, 887, 1096, 1598, 2540, 3676, 4290, 4946, 6679, 9492, 12770, 14344, 16005, 20642, 27434, 35108, 38577, 42206, 52708, 66971, 82688, 89544, 96669, 117821, 144921, 174201, 186677, 199584, 238617, 286366, 337147, 358435, 380376, 447685, 526989, 610246, 644736, 793535, 921810, 1106758, 1260955, 1487304, 1557657, 1990632, 2083386, 0],
	[0, 288, 368, 568, 696, 1206, 1774, 2192, 3196, 5080, 7352, 8580, 9892, 13358, 18984, 31925, 35860, 40013, 51605, 68585, 87770, 96443, 105515, 131770, 167428, 206720, 223860, 241673, 294553, 362303, 479053, 513362, 548856, 656197, 787507, 927154, 985696, 1046034, 1231134, 1449220, 1678177, 1773024, 2380605, 2765430, 3320274, 3782865, 4461912, 4672971, 5971896, 6250158, 6875174, 7562652, 8318960, 9150856, 10065942, 11877812, 14015818, 16538655, 19515624, 23028437, 28094693, 34275525, 41816141, 51015692, 62239144, 79666104, 101672614, 130524946, 167071930, 213852071, 0],
	[0, 72, 92, 142, 174, 301, 443, 548, 799, 1270, 1838, 2145, 2473, 3339, 4746, 6385, 7172, 8002, 10321, 13717, 17554, 19288, 21103, 26354, 33485, 41344, 44772, 48344, 58910, 72460, 87100, 93338, 99792, 119308, 143183, 231068, 257377, 274363, 314246, 371105, 431038, 476309, 588548, 665256, 801731, 916689, 1130023, 1188623, 1377408, 1551289, 1746582, 1845236, 1954741, 2124555, 2345698, 2548763, 2759555, 3021488, 3254111, 3489547, 3695474, 4012251, 4181112, 4302211, 4496584, 4578951, 4869523, 5022114, 5123654, 5395117, 0]
];

PC_JobExp[7] = new Array();
for (var i = 0; i <= 18; i++)
	PC_JobExp[7][i] = 27434;
for (var i = 19; i <= 50; i++)
	PC_JobExp[7][i] = PC_JobExp[4][i] * 2;

m_PET = [[0, "(no loyal pet)", 0, 0]
	, [1, "Alice [MDEF+1, Demi-Human race resistance +1%]", 0, 19, 1, 57, 1, 0]
	, [2, "Isis [ATK +1%, MATK -1%]", 0, 80, 1, 89, -1, 0]
	, [3, "Desert Wolf [INT +1, MATK +3%, MaxSP +75]", 0, 4, 1, 89, 3, 14, 75, 0] 
	, [4, "Chaotic Bapho Jr. [DEF +2, MDEF +2, Neutral element resistance +1%]", 0, 18, 2, 19, 2, 60, 1, 0]
	, [5, "Whisper [Enables use of [Hiding] Lvl 1]", 0, 0]
	, [6, "Orc Warrior [ATK +10,DEF -3]", 0, 17, 10, 18, -3, 0]
	, [7, "Shinobi [AGI +2]", 0, 2, 2, 0]
	, [8, "Eclipse [CRIT +6, ATK +6, increase physical and magical damage against formless race monster by 7%]", 0, 10, 6, 17, 6, 30, 7, 170, 7, 0]
	, [9, "Baphomet [DEF +4, MDEF +4, Neutral element resistance +3%]", 0, 18, 4, 19, 4, 60, 3, 0] 
	, [10, "Baby Desert Wolf [INT +1, MaxSP +50]", 0, 4, 1, 14, 50, 0]
	, [11, "Goblin Leader [+3% ATK based damage against Demi-Human race]", 0, 37, 3, 0]
	, [12, "Galapago [Increase recovery rate of Grape Juice item by 100%]", 0, 0] 
	, [13, "Savage Babe [VIT +1, MaxHP +50]", 0, 3, 1, 13, 50, 0]
	, [14, "Geographer [Increases physical and magical damage against plant race monsters by 5%]", 0, 33, 5, 173, 5, 0] 
	, [15, "Steel Chonchon [FLEE +6, AGI -1]", 0, 9, 6, 2, -1, 0]
	, [16, "Spore [HIT +5 ,ATK -2]", 0, 8, 5, 17, -2, 0]
	, [17, "Smokie [AGI +1, Perfect Dodge +1]", 0, 2, 1, 11, 1, 0]
	, [18, "Sohee [STR +1, DEX +1]", 0, 1, 1, 5, 1, 0]
	, [19, "Green Maiden [DEF +1, Demi-Human race resistance +1%]", 0, 18, 1, 57, 1, 0]
	, [20, "Chonchon [AGI +1, FLEE +2]", 0, 2, 1, 9, 2, 0]
	, [21, "Deviruchi [ATK +1%, MATK +1%, MaxHP -3%, MaxSP -3%]", 0, 80, 1, 89, 1, 15, -3, 16, -3, 0]
	, [22, "Dullahan [CRIT +5]", 0, 10, 5, 0]
	, [23, "Evil Nymph [MaxSP +30, SP Recovery +5%]", 0, 14, 30, 76, 5, 0]
	, [24, "Dokebi [MATK +1%, ATK -1%]", 0, 89, 1, 80, -1, 0]
	, [25, "Drops [HIT +3, ATK +3]", 0, 8, 3, 17, 3, 0]
	, [26, "Blue Moon Loli Ruri [MaxHP +5%, When receiving ATK based damage, 5% chance to use Heal Lvl 2]", "5% chance to cast Heal Lvl 2 on owner when receiving physical damage", 15, 5, 0]
	, [27, "Baphomet Jr. [DEF +1, MDEF +1, Stun status resistance -1%]", 0, 18, 1, 19, 1, 151, -1, 0]
	, [28, "Hunter Fly [Perfect Dodge +2, FLEE -5]", 0, 11, 2, 9, -5, 0]
	, [29, "Picky [STR +1, ATK +5]", 0, 1, 1, 17, 5, 0]
	, [30, "Earth Petite [ASPD +1%, DEF -2, MDEF -2]", 0, 12, 1, 18, -2, 19, -2, 0]	
	, [31, "Stone Shooter [Fire element resistance +3%]", 0, 63, 3, 0]
	, [32, "Peco Peco [MaxHP +150, MaxSP -10]", 0, 13, 150, 14, -10, 0]
	, [33, "Poison Spore [STR +1, INT +1]", 0, 1, 1, 4, 1, 0]
	, [34, "Poporing [LUK +2, Poison element resistance +10%]", 0, 6, 2, 65, 10, 0]
	, [35, "Poring [LUK +2, CRIT +1]", 0, 6, 2, 10, 1, 0]
	, [36, "Bongun [VIT +1, Stun status resistance +1%]", 0, 3, 1, 151, 1, 0]
	, [37, "Marionette [Recover 5 SP every 10 seconds]", 0, 0]
	, [38, "Miyabi Doll [INT +1, Cast Time -3%]", 0, 4, 1, 73, -3, 0]
	, [39, "Mao Guai [MaxHP +75, MaxSP +75]", 0, 13, 75, 14, 75, 0]
	, [40, "Osiris [HIT +10, increase physical and magical damage against dragon race monsters by 7%]", 0, 8, 10, 39, 7, 179, 7, 0] 
	, [41, "Medusa [VIT +1, Stone Curse status Resistance +10%]", 0, 3, 1, 159, 10, 0]
	, [42, "Scatleton [Increase recovery rate of Fresh Fish item by 100%]", 0, 0]
	, [43, "Yoyo [CRIT +3,LUK -1]", 0, 10, 3, 6, -1, 0]
	, [44, "Leaf Cat [Brute race resistance +3%]", 0, 52, 3, 0]
	, [45, "Lunatic [CRIT +2, ATK +2]", 0, 10, 2, 17, 2, 0]
	, [46, "Rocker [HP Recovery +5%, MaxHP +25]", 0, 75, 5, 13, 25, 0]
	, [47, "Loli Ruri [MaxHP +3%, When receiving ATK based damage, 5% chance to use Heal Lvl 1]", "5% chance to cast Heal Lvl 1 on owner when receiving physical damage", 15, 3, 0]
	, [48, "Wanderer [AGI +2, LUK +2, CRIT +2]", 0, 2, 2, 6, 2, 10, 2, 0]
	, [49, "Christmas Goblin [MaxHP +30, Water element resistance +5%]", 0, 13, 30, 61, 5, 0]
	, [50, "Christmas Goblin [MaxHP +30, Frozen status resistance +5%]", 0, 13, 30, 152, 5, 0]
	, [51, "Skelion [Increase recovery rate of Fresh Fish item by 100%]", 0, 0]
	, [52, "Nightmare Terror [Sleep status resistance +10%]", 0, 155, 10, 0]
	, [53, "Goblin Leader (iRO) [Demi-Human race resistance +3%]", 0, 57, 3, 0]
	, [54, "Golem [MaxHP +100, FLEE +5]", 0, 13, 100, 9, 5, 0]
	, [55, "Incubus [MaxSP +5%, 2% to get 5% of dealt damage as SP with each ATK based attack]", 0, 16, 5, 0]
	, [56, "Succubus [5% to get 2% of dealt damage as HP with each ATK based attack]", "", 0]
	, [57, "Kathryne Keyron [Enables use of [Sight] Lvl 1]", 0, 0] 
	, [58, "Fire Imp [Fire element resistance +2%, +1% ATK based damage against Fire element]", 0, 63, 2, 43, 1, 0]
	, [59, "Wild Rider [All skill's SP cost -10%]", 0, 0]
	, [60, "Eleanor [MATK +20]", 0, 88, 20, 0] 
	, [61, "Mastering [LUK +3, CRIT +3]", 0, 6, 3, 10, 3, 0]
	, [62, "Savage [VIT +3, MaxHP +200]", 0, 3, 3, 13, 200, 0]
	, [63, "Grand Peco Peco [MaxHP +400]", 0, 13, 400, 0]
	, [64, "High Orc [ATK +20]", 0, 17, 20, 0]
	, [65, "Angeling [LUK +4, Heal effectiveness +8%]", 0, 6, 4, 91, 8, 0]
	, [66, "Am Mut [MATK +4%]", 0, 89, 4, 0]
	, [67, "Little Isis [ATK +4%]", 0, 87, 4, 0]
	, [68, "Choco [CRIT +9, Long-ranged physical damage +3%]", 0, 10, 9, 25, 3, 0]
	, [69, "Eggring [HIT +9, ATK +9]", 0, 8, 9, 17, 9, 0]
	, [70, "Nine Tail [CRIT +2, Crit Damage +5%]", 0, 10, 2, 70, 5, 0]
	, [71, "Teddy Bear [MaxSP +50]", 0, 14, 50, 0]
	, [72, "Gremlin [MATK +10]", 0, 88, 10, 0]
	, [73, "Yao Jun [VIT +4, add 4% more tolerance against Stun, low chance of gaining 1% of the damage inflicted upon an enemy as SP with each attack]", 0, 3, 4, 151, 4, 0]
	, [74, "Leaf Lunatic [CRIT +4, ATK +4, increase physical and magical damage against formless race monster by 4%]", 0, 10, 4, 17, 4, 30, 4, 170, 4, 0]
	, [75, "Cat o' Nine Tails [CRIT +3, Crit Damage +7%]", 0, 10, 3, 70, 7, 0]
	, [76, "Diabolic [ATK +2%, MATK +2%, MaxHP +2%, MaxSP +2%, chance to autocast Fire Bolt lvl 3 when dealing melee physical damage]", 0, 87, 2, 89, 2, 15, 2, 16, 2, 0]
	, [77, "Earth Deleter [ASPD +3%, AGI +3]", 0, 2, 3, 12, 3, 0]
	, [78, "Mummy [HIT +5]", 0, 8, 5, 0]
	, [79, "Wild Rose [Max Weight +600]", 0, 4, 3, 0] 
	, [80, "Khalitzburg Knight [Increases physical and magical damage against demon and undead race monsters by 5%]", 0, 31, 5, 171, 5, 36, 5, 176, 5, 0] 
	, [81, "Sweet Drops [Increase EXP received from killing monsters by 5%]", 0, 120, 5, 121, 5, 122, 5, 123, 5, 124, 5, 125, 5, 126, 5, 127, 5, 128, 5, 129, 5, 0]
	, [82, "Hodremlin [MATK +20]", 0, 88, 20, 0]
	, [83, "Metaller [Recover 25 HP every 10 seconds, MaxHP +70, increase physical and magical damage against plant race monsters by 7%]", 0, 13, 70, 33, 7, 173, 7, 0]
	, [84, "Ancient Mummy [HIT +6, increase physical and magical damage against dragon race monsters by 5%]", 0, 8, 6, 39, 5, 179, 5, 0]
	, [85, "Abandoned Teddy Bear [MaxSP +200]", 0, 14, 200, 0]
	, [86, "Moonlight Flower [CRIT +4, Crit Damage +10%]", 0, 10, 4, 70, 10, 0]
	, [87, "White Lady [MaxSP +5%, reduces delay after skill by 3%]", 0, 16, 5, 74, 3, 0]
	, [88, "Rigid Nightmare Terror [INT +2, MaxSP +3%]", 0, 4, 2, 16, 3, 0]
	, [89, "Corrupted Wanderer [AGI +4, LUK +3, CRIT +3]", 0, 2, 4, 6, 3, 10, 3, 0]
	, [90, "Aliot [STR +1, Physical Damage to Boss +5%]", 0, 1, 1, 26, 5, 0]
	, [91, "Alicel [DEX +1, Physical Damage to Boss +5%]", 0, 5, 1, 26, 5, 0]
	, [92, "Sedora [Increase water property magic damage by 5%]", 0, 19, 7, 91, 6, 0] 
	, [93, "Orc Hero [ATK +40]", 0, 17, 40, 0]
	, [94, "Gloom Under Night [MATK +30, increases ghost and fire property magical damage by 7%]", 0, 88, 30, 5046, 7, 5047, 7, 5051, 7, 5540, 7, 5052, 7, 5053, 7, 5122, 7, 5124, 7, 5125, 7, 5277, 7, 5407, 7, 5408, 7, 5409, 7, 0] 
	, [95, "Wandering Duck [Increases physical damage against fish race monsters by 5%]", 0, 35, 5, 0]
	, [96, "Kiel-D-01 [STR +2, DEX +2, Physical Damage to Boss +10%]", 0, 1, 2, 5, 2, 26, 10, 0]
	, [97, "Pupa [MaxHP +300]", 0, 13, 300, 0]
];

m_PET_SORT = [0, 1, 10, 3, 27, 4, 9, 36, 73, 20, 15 ,21, 76, 24, 66, 25, 69, 81, 22, 60, 23, 87, 12, 14, 54, 19, 72, 82, 94, 28, 58, 55, 2, 67, 44, 47, 26, 45, 74, 8, 57, 80, 39, 37, 41, 38, 78, 84, 40, 52, 88, 70, 75, 86, 6, 64, 93, 32, 63, 30, 77, 29, 34, 35, 61, 65, 97, 46, 83, 13, 62, 42, 51, 92, 7, 17, 18, 16, 33, 31, 56, 71, 85, 91, 90, 96, 48, 89, 95, 5, 59, 79, 43, 68];

m_TempEffect = [
	[0, "Temporary Card/Item Effects", "none", 0, 0, 0]
	, [1, "Isilla Card", "Cast Time -50%, FLEE +30", 2, 472, 0]
	, [2, "Ice Titan Card", "DEF +10", 2, 484, 18, 10, 0]
	, [3, "Atroce Card", "ASPD +100%", 2, 463, 12, 100, 0]
	, [4, "Anolian Card", "Attention Concentrate Lv1", 2, 224, 0]
	, [5, "Alchemist Card Set", "Adrenaline Rush", 2, 461, 0]
	, [6, "Valorous Assassin Damascus", "Ice Pick Effect", 1, 898, 23, 1, 0]
	, [7, "Ixion Wings", "ASPD +7%", 1, 821, 12, 7, 0]
	, [8, "Vanberk Card", "CRIT +100", 2, 471, 10, 100, 0]
	, [9, "Ulfhedinn", "DEF +20, MDEF -20 [Stone Skin Lv1]", 1, 708, 0]	//mejorable ? --> NO
	, [10, "Angelic Ring", "Heal/Sanctuary/Potion Pitcher Effectiveness +20%", 1, 1000, 99, 20, 0]
	, [11, "Glorious Grenade Launcher", "ASPD + 20%", 1, 1103, 12, 20, 0]
	, [12, "Glorious Jamadhar [+9]", "ASPD + 100%", 1, 1091, 12, 100, 0]
	, [13, "Glorious Tablet", "ATK + 200", 1, 1094, 17, 200, 0]
	, [14, "Glorious Shuriken", "Throw Fuuma Shuriken/Final Strike Damage +100%", 1, 1098, 5396, 100, 5405, 100, 5438, 100, 0]
	, [15, "Glorious Bloody Roar [+9]", "ASPD +100%", 1, 1090, 12, 100, 0]
	, [16, "Naght Sieger Twin-Blade [Red]", "Ignore [Non-Boss] Monster Defense", 1, 933, 22, 1, 0]
	, [17, "Her National Treasury", "Loud Exclamation", 1, 1012, 0]
	, [18, "Desert Twilight + Desert Wind", "190 ASPD", 1, 818, 12, 100, 0]
	, [19, "Shadow Guard Set [Shadow Walk + Shadow Guard]", "FLEE +20", 1, 995, 9, 20, 0]
	, [20, "Valorous Huuma Front Shuriken", "Throw Fuuma Shuriken/Final Strike Damage +100%", 1, 931, 5396, 100, 5405, 100, 5438, 100, 0]
	, [21, "Naght Sieger Twin-Blade [Blue]", "Ignore [Non-Boss] Monster Defense", 1, 932, 22, 1, 0]
	, [22, "Soldier Gatling Gun", "ATK +80", 1, 927, 17, 80, 0]
	, [23, "Soldier Grenade Launcher", "ATK +300", 1, 929, 17, 300, 0]
	, [24, "Soldier Revolver", "ASPD +100%", 1, 925, 12, 100, 0]
	, [25, "Tae Goo Lyeon [JobLv70]", "ATK +50", 1, 934, 17, 50, 0]
	, [26, "Brave Battle Fist", "Asura Strike Cast Time -100%", 1, 916, 7197, 100, 7321, 100, 0]
	, [27, "Armor of Naga", "ATK +20", 1, 989, 17, 20, 0]
	, [28, "Violet Fear", "Ignore [Non-Boss] Monster Defense", 1, 935, 22, 1, 0]
	, [29, "Bloody Eater", "CRIT +100, ATK +50", 1, 819, 10, 100, 17, 50, 0]
	, [30, "Blue Ribbon", "Attention Concentrate Lv2", 1, 885, 0]
	, [31, "Hodremlin Card", "Perfect Dodge +30", 2, 467, 11, 30, 0]
	, [32, "Mithril Magic Cape", "DEF -20, MDEF +20 [Anti-Magic Lv1]", 1, 709, 0]	//mejorable ? --> NO
	, [33, "Ring of Flame Lord", "Critical Explosion Lv1", 1, 728, 0]
	, [34, "Lord Knight Card", "Berserk", 2, 178, 0]
	, [35, "Soldier Shotgun", "ATK +80", 1, 928, 17, 80, 0]
	, [36, "Weihna", "Physical Damage +10%", 1, 1157, 80, 10, 0]
	, [37, "Ruber", "Bash / Bowling Bash Damage +20%", 1, 1158, 5006, 20, 5076, 20, 0]
	, [38, "Chronos", "MATK +12%", 1, 1172, 89, 12, 0]
	, [39, "Nemesis", "ATK +50", 1, 820, 17, 50, 0]
	, [40, "Sorin Doll Hat", "ATK +50", 1, 892, 17, 50, 0]
	, [41, "Sagittarius Diadem", "DEX/AGI +10", 1, 1288, 2, 10, 5, 10, 0]
	, [42, "Virgo Crown", "DEX +20", 1, 1294, 5, 20, 0]
	, [43, "Benit Doll Hat", "ASPD +5%", 1, 1028, 12, 5, 0]
	, [44, "Dark Knight Glove [Type A]", "ASPD +2%", 1, 1052, 12, 2, 0]
	, [45, "Dark Knight Glove [Type B]", "MaxHP +10%", 1, 1310, 15, 10, 0]
	, [46, "Jaguar Hat", "Loud Exclamation", 1, 1317, 1, 4, 0]
	, [47, "Duneyrr Card", "Perfect Dodge +10", 2, 511, 11, 10, 0]
	, [48, "Phylla Card", "CRIT +20", 2, 512, 10, 20, 0]
	, [49, "Twin Ribbon", "DEF +20, MDEF -20 [Stone Skin Lv1]", 1, 531, 0]	//mejorable ? --> NO
	, [50, "Twin Ribbon", "DEF -20, MDEF +20 [Anti-Magic Lv1]", 1, 531, 0]	//mejorable ? --> NO
	, [51, "Shield of Naga", "Reflect Melee Physical Attacks by 3*(refine)%", 1, 993, 0]
	, [52, "Power of Thor (iRO)", "ATK +40", 1, 1545, 17, 40, 0]
	, [53, "Power of Thor (iRO)", "MATK +40", 1, 1545, 88, 40, 0]
	, [54, "Duneyrr Card (aRO)", "ASPD +5%", 2, 545, 12, 5, 0]
	, [55, "Kafra Blossom Card", "Elemental resistance +10%", 2, 546, 61, 10, 62, 10, 63, 10, 64, 10, 66, 10, 67, 10, 0]
	, [56, "Witch's Pumpkin Hat + Hahoe Mask", "ATK +50", 1, 1567, 17, 50, 0]
	, [57, "Weihna (iRO)", "Physical Damage +5%", 1, 1157, 80, 5, 0]
	, [58, "Drooping Alicel", "ASPD +100%", 1, 1617, 12, 100, 0]
	, [59, "Mace Of Judgement", "+20% ATK/MATK based damage against Demon race", 1, 1662, 36, 20, 176, 20, 0]
	, [60, "Empowered Mace Of Judgement", "+20% ATK/MATK based damage against Demon race", 1, 1663, 36, 20, 176, 20, 0]
	, [61, "White Wing Manteau", "FLEE +20", 1, 1719, 9, 20, 0]
	, [62, "Bible Promise Vol1", "Odin's Power Lv1 (ATK +70, MATK +70, DEF -20, MDEF -20)", 1, 1728, 17, 70, 88, 70, 18, -20, 19, -20, 0]		//mejorable: deberia estar en "Supportive / Party Skills "
	, [63, "Bible Promise Vol2", "Odin's Power Lv2 (ATK +100, MATK +100, DEF -20, MDEF -20)", 1, 1729, 17, 100, 88, 100, 18, -20, 19, -20, 0]	//mejorable: deberia estar en "Supportive / Party Skills "
];
//m_TempEffect = [ id, name, description, item/card, item/card ID, ... ]
m_TempEffect_SORT = [0, 5, 10, 4, 27, 3, 43, 62, 63, 29, 30, 26, 38, 44, 45, 18, 58, 47, 54, 60, 15, 11, 12, 14, 13, 17, 31, 2, 1, 7, 46, 55, 34, 59, 32, 21, 16, 40, 48, 52, 53, 33, 37, 41, 19, 51, 22, 23, 24, 35, 40, 25, 49, 50, 9, 6, 20, 8, 28, 42, 36, 57, 61, 56]

//WeaponName = ["(Unarmed)","Dagger","Sword","Two-handed Sword","Spear","Two-handed Spear","Axe","Two-handed Axe","Mace","Rod / Staff","Bow","Katar","Book","Knuckle","Instrument","Whip","Huuma Shuriken","Handgun","Rifle","Shotgun","Gatling Gun","Grenade Launcher"];
WeaponName = ["Bare Hand", "Dagger", "Sword", "Two-handed Sword", "Spear", "Two-handed Spear", "Axe", "Two-handed Axe", "Mace", "Rod / Staff", "Bow", "Katar", "Book", "Knuckle", "Instrument", "Whip", "Huuma Shuriken", "Handgun", "Rifle", "Shotgun", "Gatling Gun", "Grenade Launcher"];
WeaponNameShort = ["Bare Hand", "Dagger", "Sword", "2H Sword", "Spear", "2H Spear", "Axe", "2H Axe", "Mace", "Rod / Staff", "Bow", "Katar", "Book", "Knuckle", "Instrument", "Whip", "Huuma Shuriken", "Handgun", "Rifle", "Shotgun", "Gatling Gun", "Grenade Launcher"];

m_Arrow = [
	[25, 0, "Arrow"]
	, [30, 6, "Silver Arrow"]
	, [30, 3, "Fire Arrow"]
	, [30, 0, "Iron Arrow"]
	, [30, 2, "Stone Arrow"]
	, [30, 1, "Crystal Arrow"]
	, [30, 4, "Arrow of Wind"]
	, [30, 7, "Arrow of Shadow"]
	, [30, 8, "Immaterial Arrow"]
	, [30, 5, "Rusty Arrow"]
	, [40, 0, "Steel Arrow"]
	, [50, 0, "Oridecon Arrow"]
	, [50, 6, "Arrow of Counter Evil"]
	, [1, 1, "Frozen Arrow"]
	, [1, 5, "Poison Arrow"]
	, [10, 0, "Sharp Arrow"]
	, [50, 6, "Holy Arrow"]
	, [35, 0, "Hunting Arrow"]
	, [45, 0, "Elven Arrow"]
	, [1, 0, "Stun Arrow"]
	, [1, 0, "Cursed Arrow"]
	, [1, 0, "Flash Arrow"]
	, [1, 0, "Sleep Arrow"]
	, [1, 0, "Mute Arrow"]
];

m_Arrow_ = [
	[25, 0, "Arrow"]
	, [30, 6, "Silver Arrow"]
	, [30, 3, "Fire Arrow"]
	, [30, 0, "Iron Arrow"]
	, [30, 2, "Stone Arrow"]
];

m_Bullet = [
	[10, 0, "Bullet"]
	, [15, 6, "Silver Bullet"]
	, [30, 0, "Blood Bullet"]
];

m_Grenade = [
	[50, 3, "Flare Sphere"]
	, [50, 1, "Freezing Sphere"]
	, [50, 4, "Lightning Sphere"]
	, [50, 7, "Blind Sphere"]
	, [50, 5, "Poison Sphere"]
];

m_Syuriken = [
	[10, 0, "Shuriken"]
	, [30, 0, "Numbus Shuriken"]
	, [45, 0, "Flash Shuriken"]
	, [70, 0, "Sharp Leaf Shuriken"]
	, [100, 0, "Thorn Needle Shuriken"]
];

m_Kunai = [
	[30, 3, "Heat Wave Kunai"]
	, [30, 1, "Icicle Kunai"]
	, [30, 4, "High Wind Kunai"]
	, [30, 2, "Black Earth Kunai"]
	, [30, 5, "Fell Poison Kunai"]
];

m_JobEquip = [
	[0, 50, 90, 100, 999]
	, [0, 1, 51, 101, 70, 71, 72, 74, 75, 78, 83, 84, 85, 86, 87, 90, 91, 999]
	, [0, 1, 52, 102, 72, 74, 75, 78, 80, 83, 84, 85, 91, 999]
	, [0, 1, 53, 103, 71, 73, 74, 77, 78, 85, 89, 57, 999]
	, [0, 1, 54, 104, 75, 76, 83, 89, 999]
	, [0, 1, 55, 105, 71, 77, 89, 57, 999]
	, [0, 1, 56, 106, 70, 71, 72, 73, 74, 75, 78, 83, 84, 85, 86, 90, 91, 999]
	, [0, 1, 51, 61, 107, 70, 71, 72, 74, 75, 78, 79, 83, 84, 85, 86, 87, 90, 91, 999]  //knight
	, [0, 1, 52, 62, 108, 72, 74, 75, 78, 79, 81, 83, 84, 85, 90, 91, 999]   //assassin
	, [0, 1, 53, 63, 109, 71, 73, 74, 77, 78, 79, 81, 85, 89, 57, 999]  //priest
	, [0, 1, 54, 64, 110, 75, 76, 79, 80, 83, 88, 89, 999]   //hunter
	, [0, 1, 55, 65, 111, 71, 77, 79, 89, 57, 999]     //wizard
	, [0, 1, 56, 66, 112, 70, 71, 72, 73, 74, 75, 78, 79, 83, 84, 85, 86, 90, 91, 999]  //blacksmith
	, [0, 1, 51, 61, 113, 70, 71, 72, 74, 75, 78, 79, 83, 84, 85, 86, 87, 90, 91, 999]  //crusader
	, [0, 1, 52, 62, 114, 72, 74, 75, 76, 78, 79, 80, 83, 84, 85, 88, 91, 999]    //rogue
	, [0, 1, 53, 63, 115, 71, 73, 74, 77, 78, 79, 85, 89, 57, 999]     //monk
	, [0, 1, 54, 64, 116, 74, 75, 76, 79, 83, 89, 999]     //bard
	, [0, 1, 54, 64, 117, 74, 75, 76, 79, 83, 89, 999]      //dancer
	, [0, 1, 55, 65, 118, 71, 77, 79, 89, 57, 999]     //sage
	, [0, 1, 56, 66, 119, 70, 71, 72, 73, 74, 75, 78, 79, 83, 84, 85, 86, 90, 91, 999]     //alchemist
	, [0, 50, 90, 120, 999]      //super novice
	, [0, 1, 51, 61, 107, 121, 70, 71, 72, 74, 75, 78, 79, 82, 83, 84, 85, 86, 87, 90, 91, 999]    //lord knight
	, [0, 1, 52, 62, 108, 122, 72, 74, 75, 78, 79, 81, 82, 83, 84, 85, 90, 91, 999]     //assassin cross
	, [0, 1, 53, 63, 109, 123, 71, 73, 74, 77, 78, 79, 81, 82, 85, 89, 57, 134, 136, 999]    //high priest
	, [0, 1, 54, 64, 110, 124, 75, 76, 79, 80, 82, 83, 88, 89, 135, 999]     //sniper
	, [0, 1, 55, 65, 111, 125, 71, 77, 79, 82, 89, 57, 136, 999]       //high wizard
	, [0, 1, 56, 66, 112, 126, 70, 71, 72, 73, 74, 75, 78, 79, 82, 83, 84, 85, 86, 90, 91, 999]    //whitesmith
	, [0, 1, 51, 61, 113, 127, 70, 71, 72, 74, 75, 78, 79, 82, 83, 84, 85, 86, 87, 90, 91, 999]    //paladin
	, [0, 1, 52, 62, 114, 128, 72, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 88, 91, 999]      //stalker
	, [0, 1, 53, 63, 115, 129, 71, 73, 74, 77, 78, 79, 82, 85, 89, 57, 134, 999]   //champion
	, [0, 1, 54, 64, 116, 130, 74, 75, 76, 79, 82, 83, 89, 135, 999]    //clown
	, [0, 1, 54, 64, 117, 131, 74, 75, 76, 79, 82, 83, 89, 135, 999]    //gypsie
	, [0, 1, 55, 65, 118, 132, 71, 77, 79, 82, 89, 57, 999]       //professor
	, [0, 1, 56, 66, 119, 133, 70, 71, 72, 73, 74, 75, 78, 79, 82, 83, 84, 85, 86, 90, 91, 999]    //creator
	, [0]
	, [0]
	, [0]
	, [0]
	, [0]
	, [0]
	, [0]
	, [0, 1, 141, 83, 84, 85, 86, 3001, 3051, 3070, 3072, 999]		//taekwon kid
	, [0, 1, 142, 79, 83, 84, 85, 86, 87, 91, 2082, 3001, 3051, 3070, 3072, 3079, 999]   //star gladiator
	, [0, 1, 143, 55, 65, 71, 77, 79, 89, 2082, 3001, 3079, 3089, 999]    //soul linker
	, [0, 1, 144, 58, 52, 91, 3001, 3051, 3054, 3070, 3072, 3089, 999]		//ninja
	, [0, 1, 145, 59, 83, 3001, 3054, 3089, 999]		//gunslinger
	, [0, 1, 51, 61, 107, 121, 70, 71, 72, 74, 75, 78, 79, 82, 83, 84, 85, 86, 87, 90, 91, 93, 147, 999]		// Rune Knight
	, [0, 1, 51, 61, 107, 121, 70, 71, 72, 74, 75, 78, 79, 82, 83, 84, 85, 86, 87, 90, 91, 93, 147, 999]		// Rune Knight
	, [0, 1, 52, 62, 108, 122, 72, 74, 75, 78, 79, 81, 82, 83, 84, 85, 90, 91, 147, 999]		// Guillotine Cross
	, [0, 1, 52, 62, 108, 122, 72, 74, 75, 78, 79, 81, 82, 83, 84, 85, 90, 91, 147, 999]		// Guillotine Cross
	, [0, 1, 53, 63, 109, 123, 71, 73, 74, 77, 78, 79, 81, 82, 85, 89, 92, 94, 146, 999]		// Arch Bishop
	, [0, 1, 53, 63, 109, 123, 71, 73, 74, 77, 78, 79, 81, 82, 85, 89, 92, 94, 146, 999]		// Arch Bishop
	, [0, 1, 54, 64, 110, 124, 75, 76, 79, 80, 82, 83, 88, 89, 147, 999]		// Ranger
	, [0, 1, 54, 64, 110, 124, 75, 76, 79, 80, 82, 83, 88, 89, 147, 999]		// Ranger
	, [0, 1, 55, 65, 111, 125, 71, 77, 79, 82, 89, 94, 146, 999]		// Warlock
	, [0, 1, 55, 65, 111, 125, 71, 77, 79, 82, 89, 94, 146, 999]		// Warlock
	, [0, 1, 56, 66, 112, 126, 70, 71, 72, 73, 74, 75, 78, 79, 82, 83, 84, 85, 86, 90, 91, 92, 147, 999]		// Mechanic
	, [0, 1, 56, 66, 112, 126, 70, 71, 72, 73, 74, 75, 78, 79, 82, 83, 84, 85, 86, 90, 91, 92, 147, 999]		// Mechanic
	, [0, 1, 51, 61, 113, 127, 70, 71, 72, 74, 75, 78, 79, 82, 83, 84, 85, 86, 87, 90, 91, 93, 147, 999]		// Royal Guard
	, [0, 1, 51, 61, 113, 127, 70, 71, 72, 74, 75, 78, 79, 82, 83, 84, 85, 86, 87, 90, 91, 93, 147, 999]		// Royal Guard
	, [0, 1, 52, 62, 114, 128, 72, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 88, 91, 147, 999]		// Shadow Chaser
	, [0, 1, 52, 62, 114, 128, 72, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 88, 91, 147, 999]		// Shadow Chaser
	, [0, 1, 53, 63, 115, 129, 71, 73, 74, 77, 78, 79, 82, 85, 89, 92, 146, 999]		// Sura
	, [0, 1, 53, 63, 115, 129, 71, 73, 74, 77, 78, 79, 82, 85, 89, 92, 146, 999]		// Sura
	, [0, 1, 54, 64, 116, 130, 74, 75, 76, 79, 82, 83, 89, 147, 999]		// Minstrel
	, [0, 1, 54, 64, 116, 130, 74, 75, 76, 79, 82, 83, 89, 147, 999]		// Minstrel
	, [0, 1, 54, 64, 117, 131, 74, 75, 76, 79, 82, 83, 89, 147, 999]		// Wanderer
	, [0, 1, 54, 64, 117, 131, 74, 75, 76, 79, 82, 83, 89, 147, 999]		// Wanderer
	, [0, 1, 55, 65, 118, 132, 71, 77, 79, 82, 89, 146, 999]		// Sorcerer
	, [0, 1, 55, 65, 118, 132, 71, 77, 79, 82, 89, 146, 999]		// Sorcerer
	, [0, 1, 56, 66, 119, 133, 70, 71, 72, 73, 74, 75, 78, 79, 82, 83, 84, 85, 86, 90, 91, 92, 147, 999]		// Genetic
	, [0, 1, 56, 66, 119, 133, 70, 71, 72, 73, 74, 75, 78, 79, 82, 83, 84, 85, 86, 90, 91, 92, 147, 999]		// Genetic
	, [0, 1, 144, 58, 52, 91, 999]		// Kageru / Oboro
	, [0, 50, 90, 120, 999]		// Expanded Super Novice
];


m_Pets = [
	[800, 1000, 200, 500, 1500, 800, 500, 800, 500, 1500, 200, 200, 200, 800, 800, 800, 800, 800, 800, 800, 50, 500, 2000, 500, 50, 500, 200, 200, 1500, 500, 500, 200, 200, 500, 200, 500, 1000, 500, 2000, 1000, 1000, 2000, 1500, 1500, 500, 1000, 500, 1500, 1000, 200, 200, 1000, 800, 500, 2000, 300]
	, [13, 189, 229, 275, 184, 194, 193, 186, 205, 214, 329, 198, 466, 108, 109, 110, 111, 112, 113, 114, 115, 106, 398, 232, 23, 20, 345, 326, 311, 334, 283, 306, 299, 302, 216, 50, 262, 250, 238, 267, 271, 272, 320, 128, 73, 161, 167, 160, 153, 260, 123, 307, 129, 26, 399, 142]
];
/*
Alice = 800
Baby Desert Wolf = 1000
Baphomet Jr. = 200
Bon Gun = 500
Chonchon = 1500
Deleter = 800
Deviruchi = 500
Diabolic = 800
Dokebi = 500
Drops = 1500
Dullahan = 200
Evil Nymph = 200
Fire Imp = 200
Goblins = 800
Goblin Leader = 50
Golem = 500
Green Maiden = 2000
Hunter Fly = 500
Incubus = 50
Isis = 500
Leaf Cat = 200
Loli Ruri = 200
Lunatic = 1500
Mao Guai = 500
Marionette = 500
Medusa = 200
Miyabi Doll = 200
Munak = 500
Nightmare Terror = 200
Orc Warrior = 500
Peco Peco = 1000
Petite = 500
Picky = 2000
Poison Spore = 1000
Poporing = 1000
Poring = 2000
Rocker = 1500
Savage Babe = 1500
Shinobi = 500
Smokie = 1000
Sohee = 500
Spore = 1500
Steel Chonchon = 1000
Stone Shotter = 200
Succubus = 200
Yoyo = 1000
Wanderer = 800
Whisper = 500
White Lady = 2000
Zealotus = 300
*/


/*
m_Potion =[
[0,28.4,"Red Potion"]
,[1,28.4,"Yellow Potion"]
,[2,28.4,"White Potion"]
,[3,3.4,"Blue Potion"]
,[4,3.4,"Slim Red Potion"]
,[5,0.9,"Slim Yellow Potion"]
,[6,0,"Slim White Potion"]
,[7,18.4,"Alcohol"]
,[8,8.4,"Acid Bottle"]
,[9,8.4,"Bottle Grenade"]
,[10,8.4,"Plant Bottle"]
,[11,8.4,"Marine Sphere Bottle"]
,[12,0,"Glistening Coat"]
,[13,3.4,"Anodyne"]
,[14,3.4,"Aloevera"]
,[15,3.4,"Embryo"]
,[16,3.4,"Elemental Resist Potions"]
];*/
m_Potion = [		//new
	[0, 20, "Red Potion", 5]
	, [1, 20, "Yellow Potion", 5]
	, [2, 20, "White Potion", 5]
	, [3, -5, "Blue Potion", 0]
	, [4, -5, "Slim Red Potion", 0]
	, [5, -7.5, "Slim Yellow Potion", 2.5]
	, [6, -10, "Slim White Potion", 5]
	, [7, 10, "Alcohol", 5]
	, [8, 0, "Acid Bottle", 5]
	, [9, 0, "Bottle Grenade", 5]
	, [10, 0, "Plant Bottle", 5]
	, [11, 0, "Marine Sphere Bottle", 5]
	, [12, -10, "Glistening Coat", 5]
	, [13, -5, "Anodyne", 0]
	, [14, -5, "Aloevera", 0]
	, [15, -5, "Embryo", 0]
	, [16, -5, "Elemental Resist Potions", 0]
];
Potion_Max = 17;

m_Anvil = [
	[0, 0, "Anvil/No Anvil"]
	, [1, 0, "Oridecon Anvil"]
	, [2, 5, "Gold Anvil"]
	, [3, 10, "Emperium Anvil"]
];
Anvil_Max = 4;

m_Potion2 = [
	[0, 45, 65, "Red Potion"]
	, [1, 105, 145, "Orange Potion"]
	, [2, 175, 235, "Yellow Potion"]
	, [3, 325, 405, "White Potion"]
	, [4, 40, 60, "Blue Potion"]
];
Potion_Max_2 = 5;

m_Potion3 = [
	[0, 45, 65, "Slim Red Potion [+10%]"]
	, [1, 45, 65, "Slim Red Potion [+20%]"]
	, [2, 45, 65, "Slim Red Potion [+30%]"]
	, [3, 45, 65, "Slim Red Potion [+40%]"]
	, [4, 45, 65, "Slim Red Potion [+50%]"]
	, [5, 175, 235, "Slim Yellow Potion [+60%]"]
	, [6, 175, 235, "Slim Yellow Potion [+70%]"]
	, [7, 175, 235, "Slim Yellow Potion [+80%]"]
	, [8, 175, 235, "Slim Yellow Potion [+90%]"]
	, [9, 325, 405, "Slim White Potion [+100%]"]
];
Potion_Max_3 = 10;

Pot_Rank = [
	[0, "No"]
	, [1, "Yes"]
];
Pot_Rank_Max = 2;

m_Cook_Kit = [
	[0, "Outdoor Cooking Kit"]
	, [1, "Home Cooking Kit"]
	, [2, "Professional Cooking Kit"]
	, [3, "Royal Cooking Kit"]
	, [4, "Fantastic Cooking Kit"]
];
Cook_Kit_Max = 5;

m_Stat_Food = [
	[0, "STR"]
	, [1, "AGI"]
	, [2, "VIT"]
	, [3, "INT"]
	, [4, "DEX"]
	, [5, "LUK"]
];
Stat_Food_Max = 6;